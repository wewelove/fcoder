<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>内网部署 YApi</title>
    <url>/fcoder/2022/01/27/yapi/</url>
    <content><![CDATA[<p>Ubuntu 20.04 虚拟机下载手动部署 <a href="https://hellosean1025.github.io/yapi/index.html" target="_blank" rel="noopener">YApi</a> 服务。</p>
<ul>
<li>适用 Yapi v1.10.x 版本</li>
</ul>
<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul>
<li><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">nodejs</a> 版本 v12.x；</li>
<li><a href="https://www.mongodb.org.cn/" target="_blank" rel="noopener">mongodb</a> 版本 v4.4；</li>
</ul>
<h3 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h3><p>系统默认 nodejs 版本为 10.x ，直接安装可能失败，需要升级至 12.x 版本。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入秘钥，注册源，更新</span></span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_12.x | sudo -E bash -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo apt install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换 npm 源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<h3 id="安装-mongodb"><a href="#安装-mongodb" class="headerlink" title="安装 mongodb"></a>安装 mongodb</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入秘钥</span></span><br><span class="line">wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册源</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse"</span> | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新并安装</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install -y mongodb-org</span><br></pre></td></tr></table></figure>

<p>如果以上操作不成功，请求参考官方 <a href="https://docs.mongodb.com/v4.4/tutorial/install-mongodb-on-ubuntu/" target="_blank" rel="noopener">安装过程</a>。</p>
<p>安装完成后将 mongodb 设置为系统服务，开机启动：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> mongod</span><br></pre></td></tr></table></figure>

<h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><p>检查环境：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">node -v <span class="comment"># v12.22.8</span></span><br><span class="line">npm -v <span class="comment"># 6.14.15</span></span><br></pre></td></tr></table></figure>

<p>使用官方推荐的可视化部署方式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局安装 YApi 命令行工具</span></span><br><span class="line">sudo npm install -g yapi-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动可视化安装界面</span></span><br><span class="line">sudo yapi server <span class="comment"># 在浏览器打开 http://0.0.0.0:9090 访问。非本地服务器，请将 0.0.0.0 替换成指定的域名或ip</span></span><br></pre></td></tr></table></figure>

<p>根据提示在浏览器中打开安装页面，输入相关信息，点击 <strong>开始部署</strong>：</p>
<p><img src="/fcoder/images/yapi.png" alt=""></p>
<p>安装完成后注意结尾提示，注意保存管理员账号和密码：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">初始化管理员账号成功,账号名：<span class="string">"admin@admin.com"</span>，密码：<span class="string">"ymfe.org"</span></span><br><span class="line">部署成功，请切换到部署目录，输入： <span class="string">"node vendors/server/app.js"</span> 指令启动服务器, 然后在浏览器打开 http://127.0.0.1:3000 访问</span><br></pre></td></tr></table></figure>

<h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><p>使用 pm2 管理应用进程:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 pm2</span></span><br><span class="line">sudo npm install pm2 -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># pm2 管理 yapi 服务，请求注意修改 Yapi 安装目录</span></span><br><span class="line">sudo pm2 start <span class="string">"/&lt;dir&gt;/yapi/vendors/server/app.js"</span> --name yapi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务信息</span></span><br><span class="line">sudo pm2 info yapi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">sudo pm2 stop yapi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">sudo pm2 restart yapi</span><br></pre></td></tr></table></figure>

<p>将 pm2 设置为系统服务，开机启动 YApi：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置 pm2 为系统服务</span></span><br><span class="line">sudo pm2 upstart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存已启动的应用</span></span><br><span class="line">sudo pm2 save</span><br></pre></td></tr></table></figure>

<p>更多请参考 pm2 <a href="https://pm2.keymetrics.io/docs/usage/quick-start/" target="_blank" rel="noopener">官方文档</a>。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Yapi</tag>
        <tag>pm2</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS 弹性布局</title>
    <url>/fcoder/2021/08/17/css-flexbox/</url>
    <content><![CDATA[<blockquote>
<p>Flexbox 是 flexible box 的简称（注：意思是“灵活的盒子容器”），是 CSS3 引入的新的布局模式。它决定了元素如何在页面上排列，使它们能在不同的屏幕尺寸和设备下可预测地展现出来。</p>
</blockquote>
<p>它之所以被称为 Flexbox ，是因为它能够扩展和收缩 flex 容器内的元素，以最大限度地填充可用空间。与以前布局方式（如 table 布局和浮动元素内嵌块元素）相比，Flexbox 是一个更强大的方式：</p>
<ul>
<li>在不同方向排列元素。</li>
<li>重新排列元素的显示顺序。</li>
<li>更改元素的对齐方式。</li>
<li>动态地将元素装入容器。</li>
</ul>
<h2 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。</p>
<p><img src="/fcoder/images/css-flexbox-01.png" alt=""></p>
<p>在 Flexbox 模型中，有三个核心概念：</p>
<ul>
<li>flex 项（注：也称 flex 子元素），需要布局的元素。</li>
<li>flex 容器，其包含 flex 项。</li>
<li>排列方向（direction），这决定了 flex 项的布局方向。</li>
</ul>
<h2 id="2、容器属性"><a href="#2、容器属性" class="headerlink" title="2、容器属性"></a>2、容器属性</h2><p><img src="/fcoder/images/css-flexbox-02.png" alt=""></p>
<h3 id="2-1-flex-direction"><a href="#2-1-flex-direction" class="headerlink" title="2.1  flex-direction:"></a>2.1  flex-direction:</h3><ul>
<li>row（默认值）：主轴为水平方向，起点在左端。</li>
<li>row-reverse：主轴为水平方向，起点在右端。</li>
<li>column：主轴为垂直方向，起点在上沿。</li>
<li>column-reverse：主轴为垂直方向，起点在下沿。</li>
</ul>
<p><img src="/fcoder/images/css-flexbox-03.png" alt=""></p>
<h3 id="2-2-flex-wrap"><a href="#2-2-flex-wrap" class="headerlink" title="2.2   flex-wrap:"></a>2.2   flex-wrap:</h3><ul>
<li>nowrap（默认）：不换行。</li>
<li>wrap：换行，第一行在上方。</li>
<li>wrap-reverse：换行，第一行在下方。</li>
</ul>
<h3 id="2-3-justify-content"><a href="#2-3-justify-content" class="headerlink" title="2.3  justify-content:"></a>2.3  justify-content:</h3><ul>
<li>flex-start（默认值）：左对齐。</li>
<li>flex-end：右对齐。</li>
<li>center： 居中。</li>
<li>space-between：两端对齐，项目之间的间隔都相等。</li>
<li>space-around：每个项目两侧的间隔相等，项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>
<p><img src="/fcoder/images/css-flexbox-04.gif" alt=""></p>
<h3 id="2-4-align-items"><a href="#2-4-align-items" class="headerlink" title="2.4  align-items:"></a>2.4  align-items:</h3><ul>
<li>flex-start：交叉轴的起点对齐。</li>
<li>flex-end：交叉轴的终点对齐。</li>
<li>center：交叉轴的中点对齐。</li>
<li>baseline: 项目的第一行文字的基线对齐。</li>
<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>
</ul>
<p><img src="/fcoder/images/css-flexbox-05.gif" alt=""></p>
<h3 id="2-5-align-content"><a href="#2-5-align-content" class="headerlink" title="2.5  align-content:"></a>2.5  align-content:</h3><p>定义了多根轴线的对齐方式，如果项目只有一根轴线，那么该属性将不起作用</p>
<ul>
<li>flex-start：与交叉轴的起点对齐。</li>
<li>flex-end：与交叉轴的终点对齐。</li>
<li>center：与交叉轴的中点对齐。</li>
<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>
<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>
<li>stretch（默认值）：轴线占满整个交叉轴。</li>
</ul>
<p><img src="/fcoder/images/css-flexbox-06.png" alt=""></p>
<p><strong>结合 justify-content和align-items，看看在 flex-direction 两个不同属性值的作用下，轴心有什么不同：</strong></p>
<p><img src="/fcoder/images/css-flexbox-07.gif" alt=""></p>
<h2 id="3、项目属性"><a href="#3、项目属性" class="headerlink" title="3、项目属性"></a>3、项目属性</h2><p><img src="/fcoder/images/css-flexbox-08.png" alt=""></p>
<h3 id="3-1-order属性"><a href="#3-1-order属性" class="headerlink" title="3.1 order属性"></a>3.1 order属性</h3><p><img src="/fcoder/images/css-flexbox-09.png" alt=""></p>
<h3 id="3-2-flex-grow属性"><a href="#3-2-flex-grow属性" class="headerlink" title="3.2 flex-grow属性"></a>3.2 flex-grow属性</h3><p><code>flex-grow</code> 属性定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。</p>
<p>如果所有项目的 <code>flex-grow</code> 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 <code>flex-grow</code> 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。</p>
<p><img src="/fcoder/images/css-flexbox-10.png" alt=""></p>
<h3 id="3-3-flex-shrink属性"><a href="#3-3-flex-shrink属性" class="headerlink" title="3.3 flex-shrink属性"></a>3.3 flex-shrink属性</h3><p><code>flex-shrink</code> 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: &lt;number&gt;; <span class="comment">/* default 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/fcoder/images/css-flexbox-11.jpg" alt=""></p>
<p>如果所有项目的 <code>flex-shrink</code> 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 <code>flex-shrink</code> 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。</p>
<p>负值对该属性无效。</p>
<h3 id="3-4-align-self属性"><a href="#3-4-align-self属性" class="headerlink" title="3.4 align-self属性"></a>3.4 align-self属性</h3><p><code>align-self</code> 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 <code>align-items</code> 属性。默认值为 <code>auto</code>，表示继承父元素的 <code>align-items</code> 属性，如果没有父元素，则等同于 <code>stretch</code>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/fcoder/images/css-flexbox-12.png" alt=""></p>
<p><strong>弹性布局默认不改变项目的宽度，但是它默认改变项目的高度。如果项目没有显式指定高度，就将占据容器的所有高度。</strong></p>
<blockquote>
<p>参考：<br><a href="https://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">阮一峰的网络日志</a><br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">Flex 布局教程：语法篇</a><br><a href="http://www.ruanyifeng.com/blog/2018/10/flexbox-form.html" target="_blank" rel="noopener">Flexbox 布局的最简单表单</a></p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>flex</tag>
        <tag>弹性布局</tag>
      </tags>
  </entry>
  <entry>
    <title>安装 node-sass 正确姿势</title>
    <url>/fcoder/2021/08/10/node-sass/</url>
    <content><![CDATA[<p>windows 下面安装 node-sass，确实令人头痛，正确姿势如下：</p>
<h2 id="修改-NPM-镜像"><a href="#修改-NPM-镜像" class="headerlink" title="修改 NPM 镜像"></a>修改 NPM 镜像</h2><p>查看当前设置：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm 命令</span></span><br><span class="line">npm config get registry</span><br><span class="line"><span class="comment"># yarn 命令</span></span><br><span class="line">yarn config get registry</span><br></pre></td></tr></table></figure>

<p>修改为淘宝镜像：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm 命令</span></span><br><span class="line"><span class="comment"># npm config set registry http://registry.npm.taobao.org/</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br><span class="line"><span class="comment"># yarn 命令</span></span><br><span class="line"><span class="comment"># yarn config set registry http://registry.npm.taobao.org/</span></span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<h2 id="安装-windows-平台编译环境"><a href="#安装-windows-平台编译环境" class="headerlink" title="安装 windows 平台编译环境"></a>安装 windows 平台编译环境</h2><p>需要在管理员权限下安装：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install -g node-gyp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 python 和 vs-build</span></span><br><span class="line"><span class="comment"># 此过程可能长时间没有反映，可从控制面板中检查是否安装成功</span></span><br><span class="line"><span class="comment"># 安装完成后要重新打开命令行窗口</span></span><br><span class="line">npm install -g --production windows-build-tools</span><br></pre></td></tr></table></figure>

<h2 id="安装-node-sass"><a href="#安装-node-sass" class="headerlink" title="安装 node-sass"></a>安装 node-sass</h2><p>安装时可以指定 node-sass 镜像地址：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm i node-sass --sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</span></span><br><span class="line">npm i node-sass --sass_binary_site=https://npmmirror.com/mirrors/node-sass/</span><br></pre></td></tr></table></figure>

<p>成功！</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>sass</tag>
        <tag>scss</tag>
        <tag>node-sass</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 中 CRLF 与 LF 的转换</title>
    <url>/fcoder/2021/08/10/git-crlf-lf/</url>
    <content><![CDATA[<h2 id="换行符在不同的操作系统上的表示"><a href="#换行符在不同的操作系统上的表示" class="headerlink" title="换行符在不同的操作系统上的表示"></a>换行符在不同的操作系统上的表示</h2><p>首先要理解的一点是，对于不同的操作系统，对于换行符的表示是不一样的。也就是说当我们在编辑一个文件，在键盘上按下回车键的时候，对于不同的操作系统保存到文件中的换行符是不一样的。见下表：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CR: 表示回车\r</span><br><span class="line">LF: 表示换行\n</span><br><span class="line">CRLF: 表示回车换行\r\n</span><br><span class="line"></span><br><span class="line">敲下回车键，不同的操作系统保存到文件中的值：</span><br><span class="line">Windows：使用的是 CRLF &#x3D;&#x3D;&gt; 即 \r\n，文件中保存的是 \r\n</span><br><span class="line">Linux&#x2F;Unix: 使用的是 LF &#x3D;&#x3D;&gt; 即 \n，文件中保存的是 \n</span><br><span class="line">MacOS: 使用的是 CR &#x3D;&#x3D;&gt; 即 \r，文件中保存的是 \r</span><br><span class="line">MacOS X系统：使用的是 LF &#x3D;&#x3D;&gt; 即 \n，文件中保存的是 \n（MacOS X 已经改成和 Unix&#x2F;Linx 一样使用 LF）</span><br></pre></td></tr></table></figure>

<p>问题: 既然不同的操作系统，对于换行符使用不同的表示形式，如果一个团队在开发一个共同的项目，如果你使用的是 windows 系统，而你的小伙伴用的是 Mac 的话，当你们使用 git 协同开发软件时，就会出现换行符不统一的问题。</p>
<p>虽然对于不同的操作系统，默认的换行符的表示方法不一样，但是编辑器是可以设置在敲下回车键的时候保存的换行符是什么的，比如常用的 vscode 就可以进行设置。直接点击编辑器右下角的 LF 或者 CRLF，出现如下图所示的设置，直接选择即可。在设置完成之后，在敲回车键，保存在文件中的换行符就是你设置的（CRLF 或者是 LF，设置什么就是什么）。</p>
<p><img src="/fcoder/images/git-crlf-lf.png" alt="vbox-guest-additions-01"> </p>
<h2 id="Git-会自动对换行符进行转换"><a href="#Git-会自动对换行符进行转换" class="headerlink" title="Git 会自动对换行符进行转换"></a>Git 会自动对换行符进行转换</h2><p>Git 为了解决上面提出的问题，会自动对换行符进行转换。转换的方案有 3 种：</p>
<ol>
<li><p>在提交时将 CRLF 转换为 LF，在拉取（检出 checkout）时将 UNIX 换行符（LF）替换成 CRLF。（Windows 系统推荐使用，我们在 windows 上安装 git 的时候，如果一路 next，默认是使用这个方案）。</p>
</li>
<li><p>在提交时将 CRLF 转换为 LF，在拉取（检出 checkout）时不进行转换。（Linux/Unix 和 MacOS 和 MacOS X 推荐使用，在 Unix 或者类 Unix 操作系统上安装 git，默认使用这种方案）。</p>
</li>
<li><p>不进行转换（这种方案对于跨平台项目不推荐使用）。</p>
</li>
</ol>
<p>可以发现，如果不使用第3种方案，那么在 Git 仓库（包括本地仓库和 GitHub 远程仓库）中保存的文件的换行符都是 LF 表示的。</p>
<h2 id="自己指定换行符转换方案"><a href="#自己指定换行符转换方案" class="headerlink" title="自己指定换行符转换方案"></a>自己指定换行符转换方案</h2><p>我们自己在开发过程中，是可以修改/设置 Git 的换行符转换方案的。修改/设置的方法有 2 种。</p>
<h3 id="通过-Git-的全局配置进行修改"><a href="#通过-Git-的全局配置进行修改" class="headerlink" title="通过 Git 的全局配置进行修改"></a>通过 Git 的全局配置进行修改</h3><p>设置 autocrlf 属性，在控制台直接运行如下的一条命令就可以设置了：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">// 提交时转换为 LF，检出时转换为 CRLF</span><br><span class="line">git config --global core.autocrlf <span class="literal">true</span>   </span><br><span class="line"></span><br><span class="line">// 提交时转换为LF，检出时不转换</span><br><span class="line">git config --global core.autocrlf input   </span><br><span class="line"></span><br><span class="line">// 提交检出均不转换</span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>上述命令运行之后，会修改 <code>.gitconfig</code> 文件。</p>
<p>一般在项目中，为了避免项目中同时出现 CRLF 和 LF，还可以开启 safecrlf 检查。当然，如果你的项目自己定义了语法检查规则，例如使用 eslint 去约束换行符必须是 LF，那么当你的文件中出现 CRLF 的时候，eslint 会给你错误提示信息，告诉你不能包含 CRLF，这时候，不开启 safecrlf 也是可以的 （一般建议开启）。</p>
<p>开启方法如下第一条命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 拒绝提交包含混合换行符的文件 （一般设置为 true）</span><br><span class="line">git config --global core.safecrlf true   </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 允许提交包含混合换行符的文件</span><br><span class="line">git config --global core.safecrlf false   </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 提交包含混合换行符的文件时给出警告</span><br><span class="line">git config --global core.safecrlf warn</span><br></pre></td></tr></table></figure>

<p>上述命令运行之后，也会修改<code>.gitconfig</code> 文件。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>crlf</tag>
        <tag>lf</tag>
      </tags>
  </entry>
  <entry>
    <title>NPM 包发布流程</title>
    <url>/fcoder/2020/06/06/npm-package-publish/</url>
    <content><![CDATA[<h2 id="注册-NPM-账号"><a href="#注册-NPM-账号" class="headerlink" title="注册 NPM 账号"></a>注册 NPM 账号</h2><p>点击 <a href="https://www.npmjs.com/signup" target="_blank" rel="noopener">注册账号</a>，并完成邮箱验证。</p>
<h2 id="初始化-NPM-项目"><a href="#初始化-NPM-项目" class="headerlink" title="初始化 NPM 项目"></a>初始化 NPM 项目</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建项目目录</span></span><br><span class="line">mkdir &lt;project&gt;</span><br><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line"><span class="built_in">cd</span> &lt;project&gt;</span><br><span class="line"><span class="comment"># 初始化项目</span></span><br><span class="line">npm init</span><br></pre></td></tr></table></figure>

<p>执行上述命令，根据提示输入相关信息，完成后目录下会生成 <code>package.json</code> 文件，内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"demo"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"A demo projcet of npm."</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [</span><br><span class="line">    <span class="string">"npm"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"hao"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>name：项目名称</li>
<li>version： 版本号</li>
<li>description: 项目描述</li>
<li>main：包入口文件，默认为 index.js</li>
<li>repository：代码存放地址（一般是 git 地址）</li>
<li>keywords：项目关键字，便于搜索</li>
<li>author：作者</li>
<li>license：授权协议</li>
</ul>
<p>详情请参考：<a href="https://docs.npmjs.com/files/package.json" target="_blank" rel="noopener">package.json</a></p>
<h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p>如果你使用的是 taobao 源，要先切换到官方源：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm 官方源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry=http://registry.npmjs.org</span><br><span class="line"><span class="comment"># taobao 源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry=http://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>

<p>添加用户，根据提示输入账号信息：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm adduer</span><br></pre></td></tr></table></figure>

<h2 id="发布-NPM-包"><a href="#发布-NPM-包" class="headerlink" title="发布 NPM 包"></a>发布 NPM 包</h2><p>登陆，根据提示输入用户名和密码：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure>

<p>发布：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>npm</tag>
        <tag>package</tag>
        <tag>publish</tag>
        <tag>包</tag>
        <tag>发布</tag>
      </tags>
  </entry>
  <entry>
    <title>为 Hexo 添加 Mermaid 图表功能</title>
    <url>/fcoder/2020/02/11/mermaid/</url>
    <content><![CDATA[<pre class="mermaid">graph TD;
    A-->B;
    A-->C;
    B-->D;
    C-->D;</pre>


<pre class="mermaid">sequenceDiagram
    participant Alice
    participant Bob
    Alice->>John: Hello John, how are you?
    loop Healthcheck
        John->>John: Fight against hypochondria
    end
    Note right of John: Rational thoughts <br/>prevail...
    John-->>Alice: Great!
    John->>Bob: How about you?
    Bob-->>John: Jolly good!</pre>


<pre class="mermaid">gantt
dateFormat  YYYY-MM-DD
title Adding GANTT diagram to mermaid

section A section
Completed task            :done,    des1, 2014-01-06,2014-01-08
Active task               :active,  des2, 2014-01-09, 3d
Future task               :         des3, after des2, 5d
Future task2               :         des4, after des3, 5d</pre>

<pre class="mermaid">gitGraph:
options
{
    "nodeSpacing": 150,
    "nodeRadius": 10
}
end
commit
branch newbranch
checkout newbranch
commit
commit
checkout master
commit
commit
merge newbranch</pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>mermaid</tag>
      </tags>
  </entry>
  <entry>
    <title>Elementary OS 使用心得</title>
    <url>/fcoder/2020/02/11/elementaryos/</url>
    <content><![CDATA[<p>快速、开源的 Windows / macOS 替代方案。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li><a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a></li>
<li><a href="https://elementaryos.cn/" target="_blank" rel="noopener">Elementary OS</a></li>
</ul>
<h2 id="使用-apt-add-repository-增加第三方软件包源"><a href="#使用-apt-add-repository-增加第三方软件包源" class="headerlink" title="使用 apt-add-repository 增加第三方软件包源"></a>使用 <code>apt-add-repository</code> 增加第三方软件包源</h2><p>安装某些软件时需要增加第三方软件包源，如 <code>elementary-tweaks</code> 系统调整工具。使用 <code>add-apt-repository</code> 要先安装以下软件包：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install python-software-properties</span><br><span class="line">$ sudo apt-get install software-properties-common</span><br></pre></td></tr></table></figure>

<h2 id="使用-gdebi-安装-deb-软件包"><a href="#使用-gdebi-安装-deb-软件包" class="headerlink" title="使用 gdebi 安装 deb 软件包"></a>使用 <code>gdebi</code> 安装 <code>deb</code> 软件包</h2><p>安装已编译二进制 <code>deb</code> 软件包时，要用到 <code>gdebi</code> 工具：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install gdebi</span><br></pre></td></tr></table></figure>

<h2 id="安装-fcitx-小企鹅输入法"><a href="#安装-fcitx-小企鹅输入法" class="headerlink" title="安装 fcitx 小企鹅输入法"></a>安装 <code>fcitx</code> 小企鹅输入法</h2><p>安装软件包及配置工具：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install fcitx fcitx-config-gtk fcitx-pinyin </span><br><span class="line">$ sudo apt-get install fcitx-table-all</span><br><span class="line">$ sudo apt-get install im-config</span><br></pre></td></tr></table></figure>

<p>此时请重启系统，再通过 <code>im-config</code> 命令将 <code>fcitx</code> 设置为默认输入法。  </p>
<p><img src="http://static.oschina.net/uploads/space/2014/0420/143810_3tva_561214.png" alt="配置输入法"></p>
<h2 id="安装-elementary-tweaks-系统调整工具"><a href="#安装-elementary-tweaks-系统调整工具" class="headerlink" title="安装 elementary-tweaks 系统调整工具"></a>安装 <code>elementary-tweaks</code> 系统调整工具</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-add-repository -y  ppa:philip.scott/elementary-tweaks</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install elementary-tweaks</span><br></pre></td></tr></table></figure>

<p>安装完成后在 <strong>系统配置</strong> 中打开，详情请参考 <a href="http://www.elementaryos-fr.org/documentation/customisation/elementary-tweak/" target="_blank" rel="noopener">官方</a></p>
<h2 id="常用软件包"><a href="#常用软件包" class="headerlink" title="常用软件包"></a>常用软件包</h2><ul>
<li><a href="http://www.google.cn/chrome/browser/desktop/index.html" target="_blank" rel="noopener">Google Chrome</a></li>
<li><a href="http://get.opera.com/ftp/pub/opera/desktop/" target="_blank" rel="noopener">Opera</a></li>
<li><a href="http://www.sublimetext.com" target="_blank" rel="noopener">Sbulime Text</a> </li>
<li><a href="https://code.visualstudio.com" target="_blank" rel="noopener">Vs Code</a></li>
<li><a href="https://lnmp.org" target="_blank" rel="noopener">LNMP</a></li>
<li><a href="https://git-scm.com" target="_blank" rel="noopener">Git</a></li>
<li><a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a></li>
</ul>
]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>elementaryos</tag>
      </tags>
  </entry>
  <entry>
    <title>MariaDB 数据库安装设置</title>
    <url>/fcoder/2020/02/11/mariadb-install/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Ubuntu18-系统"><a href="#Ubuntu18-系统" class="headerlink" title="Ubuntu18 系统"></a>Ubuntu18 系统</h3><ol>
<li><p>设置 MariaDB 仓库</p>
<p> 默认情况下 MariaDB 的包没有在 Ubuntu 仓库中，请参考 MariaDB 官方进行设置 <a href="https://downloads.mariadb.org/mariadb/repositories/#mirror=neusoft" target="_blank" rel="noopener"><strong>移步</strong></a>。<br> 参考官方设置时请选择有效的仓库镜像地址，下面选择的是清华大学镜像，测试可用。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install software-properties-common</span><br><span class="line">$ sudo apt-key adv --fetch-keys <span class="string">'https://mariadb.org/mariadb_release_signing_key.asc'</span></span><br><span class="line">$ sudo add-apt-repository <span class="string">'deb [arch=amd64,arm64,ppc64el] http://mirror.its.dal.ca/mariadb/repo/10.4/ubuntu bionic main'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装</p>
<p> 安装过程中要输入 MariaDB 的 <code>root</code> 密码。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>
</li>
<li><p>基本操作</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 链接</span></span><br><span class="line">$ mysql -u root -p</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">$ sudo /etc/init.d/mysql stop</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">$ sudo /etc/init.d/mysql start</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">$ sudo /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><h3 id="设置-MariaDB-开启远程访问"><a href="#设置-MariaDB-开启远程访问" class="headerlink" title="设置 MariaDB 开启远程访问"></a>设置 MariaDB 开启远程访问</h3><ol>
<li><p>检查有没有设置防火墙或者 iptables 规则</p>
</li>
<li><p>检查 3306 端口是否打开</p>
<p> 检查端口状态，下面输出说明端口只在 <code>127.0.0.1</code> 上监听，所以无法通过其它 IP 访问。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ netstat -an | grep 3306</span><br><span class="line">tcp    0   0  127.0.0.1:3306    0.0.0.0:*     LISTEN</span><br></pre></td></tr></table></figure>

<p> 解决办法：修改 <code>/etc/mysql/my.cnf</code> 文件，打开文件找到下面一行内容。<br> 可以将 <code>127.0.0.1</code> 换成合适的 IP，建议直接将此行注释掉。</p>
 <figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Instead of skip-networking the default is now to listen only on</span></span><br><span class="line"><span class="comment"># localhost which is more compatible and is not less secure.</span></span><br><span class="line"><span class="attr">bind-address</span>  = <span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure>

<p> 重启 MariaDB 服务，再次检测：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo /etc/init.d/mysql restart</span><br><span class="line">$ netstat -an | grep 3306</span><br><span class="line">tcp    0   0  0.0.0.0:3306    0.0.0.0:*     LISTEN</span><br></pre></td></tr></table></figure>
</li>
<li><p>给 MariaDB 用户 root 分配远程访问权限</p>
<p> 测试时如果输出如下内容，说明不允许链接服务器。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -h 192.168.0.101 -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">ERROR 1130 (00000): Host <span class="string">'Ubuntu-Fvlo.Server'</span> is not allowed to connect to this MySQL server</span><br></pre></td></tr></table></figure>

<p> 解决办法：给 root 用户分配远程访问的权限，密码设置为 <code>123456</code>。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 28</span><br><span class="line">Server version: 5.5.51-MariaDB-1~trusty mariadb.org binary distribution</span><br><span class="line">......</span><br><span class="line">MariaDB [(none)]&gt; grant all on *.* to root@<span class="string">'%'</span> identified by <span class="string">'123456'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<p> 再次测试，成功。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -h 192.168.0.101 -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 28</span><br><span class="line">Server version: 5.5.51-MariaDB-1~trusty mariadb.org binary distribution</span><br><span class="line">......</span><br><span class="line">MariaDB [(none)]&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>CentOS6.6 要关闭防火强<br><code>service iptables stop</code> # 停止<br><code>chkconfig iptables off</code> # 禁用  </p>
</blockquote>
</li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.cnblogs.com/beanmoon/p/3173924.html" target="_blank" rel="noopener">MySQL 数据库无法远程连接的解决办法</a></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>Cmder Windows 系统命令行工具</title>
    <url>/fcoder/2020/02/11/cmder-windows/</url>
    <content><![CDATA[<h2 id="Cmder-安装"><a href="#Cmder-安装" class="headerlink" title="Cmder 安装"></a>Cmder 安装</h2><ul>
<li><a href="http://cmder.net" target="_blank" rel="noopener">Cmder</a></li>
<li><a href="https://github.com/cmderdev/cmder" target="_blank" rel="noopener">Cmder In GitHub</a></li>
</ul>
<p>从官网下载 <code>Cmder</code> 解压到任意目录即完成安装。</p>
<h2 id="添加右键"><a href="#添加右键" class="headerlink" title="添加右键"></a>添加右键</h2><p>以管理员方式打开命令行窗口，进入 <code>Cmder</code> 安装目录，即 <code>Cmder.exe</code> 所在目录，执行以下操作。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://www.jeffjade.com/2016/01/13/2016-01-13-windows-software-cmder/" target="_blank" rel="noopener">Windows 下必备神器之 Cmder</a></li>
<li><a href="http://bg.biedalian.com/2014/09/11/cmder.html" target="_blank" rel="noopener">逆天神器 Cmder</a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>cmder</tag>
      </tags>
  </entry>
  <entry>
    <title>Redmine 项目管理 - 手动安装</title>
    <url>/fcoder/2019/04/15/redmine-installation/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li><p>系统 Ubuntu18.04 Server LTS</p>
</li>
<li><p>系统没有安装 Apache 或 MySQL</p>
</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>安装APACHE2</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install apache2 libapache2-mod-passenger</span><br><span class="line"></span><br><span class="line">sudo systemctl stop apache2.service</span><br><span class="line">sudo systemctl start apache2.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> apache2.service</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>安装数据库MYSQL</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br><span class="line"></span><br><span class="line">sudo systemctl stop mysql.service</span><br><span class="line">sudo systemctl start mysql.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> mysql.service</span><br></pre></td></tr></table></figure>

<p>运行以下命令以保护MYSQL服务器的安全：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation         </span><br><span class="line"></span><br><span class="line">New password: (输入密码)</span><br><span class="line">Re-enter new password: (重复输入)</span><br><span class="line">Remove anonymous users? [Y/n]: Y</span><br><span class="line">Disallow root login remotely? [Y/n]: Y</span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n]:  Y</span><br><span class="line">Reload privilege tables now? [Y/n]:  Y</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建 REDMINE 数据库</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo mysql -u root -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database redmine;</span><br><span class="line">mysql&gt; create user <span class="string">'redmine'</span>@<span class="string">'localhost'</span> identified by <span class="string">'123456'</span>;</span><br><span class="line">mysql&gt; grant all on redmine.* to <span class="string">'redmine'</span>@<span class="string">'localhost'</span> identified by <span class="string">'123456'</span> with grant option;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户或授权时有可能报如下错误：</p>
<p>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements<br>这是由于密码太简单，不满足安全策略造成的。查看MYSQL初始的密码策略：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'validate_password%'</span>;</span><br><span class="line">+--------------------------------------+-------+</span><br><span class="line">| Variable_name                        | Value |</span><br><span class="line">+--------------------------------------+-------+</span><br><span class="line">| validate_password_check_user_name    | OFF   |</span><br><span class="line">| validate_password_dictionary_file    |       |</span><br><span class="line">| validate_password_length             | 6     |</span><br><span class="line">| validate_password_mixed_case_count   | 1     |</span><br><span class="line">| validate_password_number_count       | 1     |</span><br><span class="line">| validate_password_policy             | LOW   |</span><br><span class="line">| validate_password_special_char_count | 1     |</span><br><span class="line">+--------------------------------------+-------+</span><br><span class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.41 sec)</span><br></pre></td></tr></table></figure>

<p>解决办法：1. 设置更复杂的密码，2. 降低安全策略：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> global validate_password_policy=LOW;</span><br><span class="line"><span class="built_in">set</span> global validate_password_length=6;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>安装REDMINE</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install redmine redmine-mysql</span><br></pre></td></tr></table></figure>

<p><img src="/fcoder/images/npm-package-publish-01.webp" alt=""></p>
<p><img src="/fcoder/images/npm-package-publish-02.webp" alt=""></p>
<p><img src="/fcoder/images/npm-package-publish-03.webp" alt=""></p>
<p><img src="/fcoder/images/npm-package-publish-04.webp" alt=""></p>
<p>在安装过程中，系统将要求配置REDMINE，选择YES，然后继续。数据库选择MYSQL；接下来为REMIND实例创建一个密码以在数据库中注册，密码为上面创建的数据库用户的密码；接下来，安装GEM、BLUNDLER软件包。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo gem update</span><br><span class="line">sudo gem install bundler</span><br></pre></td></tr></table></figure>

<p>更新过程中会报如下错误，不过暂时可以忽略。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Fetching: mysql2-0.5.3.gem (100%)</span><br><span class="line">Building native extensions. This could take a <span class="keyword">while</span>...</span><br><span class="line">ERROR:  Error installing mysql2:</span><br><span class="line">    ERROR: Failed to build gem native extension.</span><br><span class="line"></span><br><span class="line">    current directory: /var/lib/gems/2.5.0/gems/mysql2-0.5.3/ext/mysql2</span><br><span class="line">/usr/bin/ruby2.5 -r ./siteconf20200414-8181-7u476x.rb extconf.rb</span><br><span class="line">mkmf.rb can<span class="string">'t find header files for ruby at /usr/lib/ruby/include/ruby.h</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">extconf failed, exit code 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Gem files will remain installed in /var/lib/gems/2.5.0/gems/mysql2-0.5.3 for inspection.</span></span><br><span class="line"><span class="string">Results logged to /var/lib/gems/2.5.0/extensions/x86_64-linux/2.5.0/mysql2-0.5.3/gem_make.out</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>为REDMINE设置APACHE2站点。首先运行以下命令创建指向REDMINE文档根目录的软链接：</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ln -s /usr/share/redmine/public /var/www/html/redmine</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>配置APACHE2</li>
</ol>
<p>运行以下命令以打开PASSENGER.CONF文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apache2/mods-available/passenger.conf</span><br></pre></td></tr></table></figure>

<p>然后将突出显示的行添加到文件中并保存：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mod_passenger.c&gt;</span><br><span class="line">    PassengerDefaultUser www-data</span><br><span class="line">    PassengerRoot &#x2F;usr&#x2F;lib&#x2F;ruby&#x2F;vendor_ruby&#x2F;phusion_passenger&#x2F;locations.ini</span><br><span class="line">    PassengerDefaultRuby &#x2F;usr&#x2F;bin&#x2F;ruby</span><br><span class="line">&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure>

<p>为REDMINE配置APACHE2站点配置文件。该文件将控制用户访问REDMINE内容的方式。运行以下命令以创建一个名为REDMINE.CONF的新配置文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apache2/sites-available/redmine.conf</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">     ServerAdmin redmime@demo.com</span><br><span class="line">     DocumentRoot &#x2F;var&#x2F;www&#x2F;html&#x2F;redmine</span><br><span class="line">     ServerName demo.com</span><br><span class="line">     ServerAlias redmine.demo.com</span><br><span class="line"></span><br><span class="line">     &lt;Directory &#x2F;var&#x2F;www&#x2F;html&#x2F;redmine&gt;</span><br><span class="line">         RailsBaseURI &#x2F;redmine</span><br><span class="line">         PassengerResolveSymlinksInDocumentRoot on</span><br><span class="line">     &lt;&#x2F;Directory&gt;</span><br><span class="line"></span><br><span class="line">     ErrorLog $&#123;APACHE_LOG_DIR&#125;&#x2F;error.log</span><br><span class="line">     CustomLog $&#123;APACHE_LOG_DIR&#125;&#x2F;access.log combined</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>启用REDMINE站点</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo a2ensite redmine.conf</span><br><span class="line">sudo systemctl restart apache2.service</span><br></pre></td></tr></table></figure>

<p>访问页面：<a href="http://redmine.demo.com/" target="_blank" rel="noopener">http://redmine.demo.com/</a></p>
<p><img src="/fcoder/images/npm-package-publish-05.webp" alt=""></p>
<p>登录账户密码：admin/admin</p>
<p><img src="/fcoder/images/npm-package-publish-06.webp" alt=""></p>
<p>首次登陆要求修改密码</p>
]]></content>
      <categories>
        <category>项目管理</category>
      </categories>
      <tags>
        <tag>redmine</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii2 多语言配置 - i18n 国际化</title>
    <url>/fcoder/2017/12/05/yii2-i18n/</url>
    <content><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>国际化 <code>i18n</code> 是 <code>Yii2</code> 的核心组件，应用 <code>bootstrap</code> 时 <code>i18n</code> 就会被实例化。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// yii2/base/Application.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">coreComponents</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">'log'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\log\Dispatcher'</span>],</span><br><span class="line">        <span class="string">'view'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\web\View'</span>],</span><br><span class="line">        <span class="string">'formatter'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\Formatter'</span>],</span><br><span class="line">        <span class="string">'i18n'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\I18N'</span>],</span><br><span class="line">        <span class="string">'mailer'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\swiftmailer\Mailer'</span>],</span><br><span class="line">        <span class="string">'urlManager'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\web\UrlManager'</span>],</span><br><span class="line">        <span class="string">'assetManager'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\web\AssetManager'</span>],</span><br><span class="line">        <span class="string">'security'</span> =&gt; [<span class="string">'class'</span> =&gt; <span class="string">'yii\base\Security'</span>],</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>默认情况 <code>i18n</code> 会把实现交给 <code>yii\i18n\PhpMessageSource</code> 类，这也是项目中最常用的方式。在不修改应用配置的情况下，只需要将多语言的 php 文件放到 <code>@app/messages</code> 目录下即可。如 <code>zh-CN</code> 中文配置 <code>@app/messages/zh-CN/app.php</code>，文件名必须为 <code>app.php</code>。</p>
<p>除此外还有 <a href="http://www.yiichina.com/doc/api/2.0/yii-i18n-dbmessagesource" target="_blank" rel="noopener"><code>yii\i18n\GettextMessageSource</code></a> 和 <a href="http://www.yiichina.com/doc/api/2.0/yii-i18n-gettextmessagesource" target="_blank" rel="noopener"><code>yii\i18n\DbMessageSource</code></a> 可用。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// yii2/i18n/I18N.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">parent</span>::init();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;translations[<span class="string">'yii'</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;translations[<span class="string">'yii*'</span>])) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;translations[<span class="string">'yii'</span>] = [</span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\PhpMessageSource'</span>,</span><br><span class="line">            <span class="string">'sourceLanguage'</span> =&gt; <span class="string">'en-US'</span>,</span><br><span class="line">            <span class="string">'basePath'</span> =&gt; <span class="string">'@yii/messages'</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;translations[<span class="string">'app'</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;translations[<span class="string">'app*'</span>])) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;translations[<span class="string">'app'</span>] = [</span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\PhpMessageSource'</span>,</span><br><span class="line">            <span class="string">'sourceLanguage'</span> =&gt; Yii::$app-&gt;sourceLanguage,</span><br><span class="line">            <span class="string">'basePath'</span> =&gt; <span class="string">'@app/messages'</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如何配置，如何使用？关键要理解 <code>i18n</code> 是如何根据配置文件加载多语言文件的。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// yii2/i18n/I18N.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMessageSource</span><span class="params">($category)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 判断 $category 在配置中是否存在</span></span><br><span class="line">    <span class="comment">// 1. 先进行完全匹配</span></span><br><span class="line">    <span class="comment">// 2. 再匹配结尾带 * 的配置</span></span><br><span class="line">    <span class="comment">// 3. 最后直接引用 * 配置</span></span><br><span class="line">    <span class="comment">// 如果某步成功，就把任务交给 PhpMessageSource，</span></span><br><span class="line">    <span class="comment">// 并将 $category 传递给 PhpMessageSource</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// yii2/i18n/PhpMessageSource.php</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getMessageFilePath</span><span class="params">($category, $language)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// PhpMessageSource 关键任务是找到多语言文件的路径</span></span><br><span class="line">    <span class="comment">// 根据 $category 获取多语言文件的路径</span></span><br><span class="line">    <span class="comment">// 1. 先从 fileMap 配置中获取路径</span></span><br><span class="line">    <span class="comment">// 2. 再用 $category 拼接路径</span></span><br><span class="line">    <span class="comment">// loadMessages() 方法根据路径加载多语言数据返回 I18N</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li><p>简单配置</p>
<p> 配置文件如下：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">'i18n'</span> =&gt; [ </span><br><span class="line">    <span class="string">'translations'</span> =&gt; [ </span><br><span class="line">        <span class="string">'demo'</span> =&gt; [ </span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\PhpMessageSource'</span>, </span><br><span class="line">            <span class="string">'basePath'</span> =&gt; <span class="string">'@app/messages'</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure>

<p> 文件存放位置：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@app/messages/zh-CN/demo.php</span><br></pre></td></tr></table></figure>

<p> 引用：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Yii::t(<span class="string">'demo'</span>, <span class="string">'key'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>分层级，通过文件目录实现</p>
<p> 配置文件如下：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">'i18n'</span> =&gt; [ </span><br><span class="line">    <span class="string">'translations'</span> =&gt; [ </span><br><span class="line">        <span class="string">'demo*'</span> =&gt; [ </span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\PhpMessageSource'</span>, </span><br><span class="line">            <span class="string">'basePath'</span> =&gt; <span class="string">'@app/messages'</span>,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure>

<p> 文件存放位置：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@app/messages/zh-CN/demo/common.php</span><br></pre></td></tr></table></figure>

<p> 引用：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Yii::t(<span class="string">'demo/common'</span>, <span class="string">'key'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>分层级，通过配置实现</p>
<p> 配置文件如下：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">'i18n'</span> =&gt; [ </span><br><span class="line">    <span class="string">'translations'</span> =&gt; [ </span><br><span class="line">        <span class="string">'demo*'</span> =&gt; [ </span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\PhpMessageSource'</span>, </span><br><span class="line">            <span class="string">'basePath'</span> =&gt; <span class="string">'@app/messages'</span>,</span><br><span class="line">            <span class="string">'fileMap'</span> =&gt; [</span><br><span class="line">                <span class="comment">// 文件名应该与键名对应，即 common.php</span></span><br><span class="line">                <span class="comment">// 此处只是为了说明问题</span></span><br><span class="line">                <span class="string">'demo/common'</span> =&gt; <span class="string">'main.php'</span></span><br><span class="line">            ]</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure>

<p> 文件存放位置：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@app/messages/zh-CN/main.php</span><br></pre></td></tr></table></figure>

<p> 引用：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Yii::t(<span class="string">'demo/common'</span>, <span class="string">'key'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>模块中独立配置</p>
<p> 在模块入口文件 Module.php 中，增加如下代码</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">parent</span>::init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( !<span class="keyword">isset</span>(Yii::$app-&gt;get(<span class="string">'i18n'</span>)-&gt;translations[<span class="string">'demo*'</span>]) ) &#123;</span><br><span class="line">        Yii::$app-&gt;get(<span class="string">'i18n'</span>)-&gt;translations[<span class="string">'demo*'</span>] = [</span><br><span class="line">            <span class="string">'class'</span> =&gt; <span class="string">'yii\i18n\PhpMessageSource'</span>, </span><br><span class="line">            <span class="string">'basePath'</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">'/messages'</span>, </span><br><span class="line">            <span class="string">'fileMap'</span> =&gt; [</span><br><span class="line">                <span class="string">'demo/common'</span> =&gt; <span class="string">'common.php'</span>,</span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 多语言文件放在模块的 <code>./messages/</code> 目录下。</p>
<p> 引用：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Yii::t(<span class="string">'demo/common'</span>, <span class="string">'key'</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>yii2</tag>
        <tag>i18n</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox 实现目录共享</title>
    <url>/fcoder/2017/11/02/vbox-guest-additions/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ol>
<li>VirtualBox 5.1.30</li>
<li>主机 Windows 10</li>
<li>虚拟机 Ubutnu Sever 16.04</li>
</ol>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>实现主机目录与虚拟机共享，虚拟机搭建测试环境，目录指向共享目录，主机中编码开发。测试环境可以在团队中共享。</p>
<h2 id="安装-VBoxGuestAdditions"><a href="#安装-VBoxGuestAdditions" class="headerlink" title="安装 VBoxGuestAdditions"></a>安装 VBoxGuestAdditions</h2><ol>
<li><p>准备</p>
<p> 安装 <code>kernel headers</code> 和 <code>build tools</code>，执行如下命令。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 请使用 root 用户操作</span><br><span class="line">apt-get install build-essential module-assistant</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 </p>
<p> 将 VBoxGuestAdditions.iso 文件解压上传到虚拟机后安装，VBoxGuestAdditions.iso 文件可以在 VirtualBox 安装目录中找到。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 请使用 root 用户操作</span><br><span class="line">cd VBoxGuestAdditions</span><br><span class="line">chmod a+x VBoxLinuxAdditions.run</span><br><span class="line">.&#x2F;VBoxLinuxAdditions.run </span><br><span class="line"># 安装完成后重启虚拟机</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="目录共享"><a href="#目录共享" class="headerlink" title="目录共享"></a>目录共享</h2><ol>
<li><p>配置共享目录</p>
<p> <img src="/fcoder/images/vbox-guest-additions-01.png" alt="vbox-guest-additions-01"> </p>
</li>
<li><p>挂载共享目录</p>
<p> 虚拟机中新建 <code>/www/wwwroot</code> 目录作为挂载点。 </p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;www&#x2F;wwwroot</span><br></pre></td></tr></table></figure>

<p> 将虚拟机 <code>/rec/rc.local</code> 文件下载，添加如下内容，然后上传覆盖原文件。</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mount -t vboxsf wwwroot &#x2F;www&#x2F;wwwroot</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>wwwroot</code> 为上一步配置的 <code>共享文件夹名称</code></p>
</blockquote>
</li>
<li><p>检查效果</p>
<p> 完成以上两步后重启虚拟机，然后看看 <code>/www/wwwroot</code> 目录与主机 <code>wwwroot</code> 目录内容是否相同。</p>
</li>
</ol>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ol>
<li><p>软链接错误</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;www&#x2F;wwwroot</span><br><span class="line">ln -s &#x2F;home&#x2F;website website</span><br><span class="line">ln: failed to create symbolic link &#96;website&#39;: Read-only file system</span><br></pre></td></tr></table></figure>

 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># php 项目提示如下错误</span><br><span class="line">symlink(): Read-only file system</span><br></pre></td></tr></table></figure>

<p> 解决办法:</p>
<p> 在主机中以管理员权限执行如下命令:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VBoxManage setextradata &quot;VM-NAME&quot; VBoxInternal2&#x2F;SharedFoldersEnableSymlinksCreate&#x2F;SHARE-FOLDER 1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>请将 VirtualBox 安装目录加入环境变更 Path 中<br><code>VM-NAME</code> 虚拟机名称，<code>SHARE-FOLDER</code> 为共享文件夹名称</p>
</blockquote>
<p> 同样以管理员权限执行如下命令，以无界面方式启动/停止虚拟机：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VBoxManage startvm &quot;VM-NAME&quot; --type headless</span><br><span class="line">VBoxManage controlvm &quot;VM-NAME&quot; poweroff</span><br></pre></td></tr></table></figure>


</li>
</ol>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>virtualbox</tag>
      </tags>
  </entry>
  <entry>
    <title>Composer 入手</title>
    <url>/fcoder/2017/09/26/composer-start/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li><a href="https://getcomposer.org" target="_blank" rel="noopener">官方</a></li>
<li><a href="http://www.phpcomposer.com" target="_blank" rel="noopener">中文网</a></li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li><p>Linux / Unix / OSX 系统</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载安装程序</span></span><br><span class="line">php -r <span class="string">"copy('https://getcomposer.org/installer', 'composer-setup.php');"</span></span><br><span class="line"><span class="comment"># 校验安装程序，此步可以忽略</span></span><br><span class="line">php -r <span class="string">"if (hash_file('SHA384', 'composer-setup.php') === '55d6ead61b29c7bdee5cccfb50076874187bd9f21f65d8991d46ec5cc90518f447387fb9f76ebae1fbbacf329e583e30') &#123; echo 'Installer verified'; &#125; else &#123; echo 'Installer corrupt'; unlink('composer-setup.php'); &#125; echo PHP_EOL;"</span></span><br><span class="line"><span class="comment"># 运行安装程序</span></span><br><span class="line">php composer-setup.php</span><br><span class="line"><span class="comment"># 删除安装程序</span></span><br><span class="line">php -r <span class="string">"unlink('composer-setup.php');"</span></span><br><span class="line"><span class="comment"># 全局安装</span></span><br><span class="line">mv composer.phar /usr/<span class="built_in">local</span>/bin/composer</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果出错请尝试使用 <code>sudo</code> 执行。</p>
</blockquote>
</li>
<li><p>Windows 系统</p>
<p> 下载并且运行 <a href="https://getcomposer.org/Composer-Setup.exe" target="_blank" rel="noopener">Composer-Setup.exe</a>，它将安装最新版本的 Composer ，并设置好系统的环境变量，因此你可以在任何目录下直接使用 composer 命令。</p>
</li>
</ol>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol>
<li><p>修改 Packagist 镜像源</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置只在当前项目生效</span></span><br><span class="line">composer config repo.packagist composer https://mirrors.aliyun.com/composer/</span><br><span class="line"><span class="comment"># 取消当前项目配置</span></span><br><span class="line">composer config --<span class="built_in">unset</span> repos.packagist</span><br></pre></td></tr></table></figure>

 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置全局生效</span></span><br><span class="line">composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/</span><br><span class="line"><span class="comment"># 取消全局配置</span></span><br><span class="line">composer config -g --<span class="built_in">unset</span> repos.packagist</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>composer</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii2 框架入手</title>
    <url>/fcoder/2017/09/26/yii2-start/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Yii 是一个高性能，基于组件的 PHP 框架，用于快速开发现代 Web 应用程序。 名字 Yii （读作 易）在中文里有“极致简单与不断演变”两重含义， 也可看作 Yes It Is! 的缩写。</p>
<ul>
<li><a href="http://www.yiiframework.com/doc-2.0/guide-index.html" target="_blank" rel="noopener">权威指南 - EN</a></li>
<li><a href="http://www.yiiframework.com/doc-2.0/index.html" target="_blank" rel="noopener">API文档 - EN</a></li>
<li><a href="http://www.yiichina.com/" target="_blank" rel="noopener">中文社区</a></li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>推荐使用 <code>composer</code> 安装，如果还没有安装 <code>composer</code> 请 <a href="/fcoder/2017/09/26/composer-start/">移步</a>。</p>
<p>先安装 <a href="https://github.com/francoispluchino/composer-asset-plugin" target="_blank" rel="noopener">Composer Asset Plugin</a> 插件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer global require fxp&#x2F;composer-asset-plugin</span><br></pre></td></tr></table></figure>

<p>选择所需的 Yii2 应用模板进行安装：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Basic </span></span><br><span class="line">composer create-project yiisoft/yii2-app-basic yii-basic</span><br><span class="line"><span class="comment"># Advanced</span></span><br><span class="line">composer create-project yiisoft/yii2-app-advanced yii-advanced</span><br></pre></td></tr></table></figure>

<p>进入项目目录并初始化：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ./init</span><br><span class="line">Yii Application Initialization Tool v1.0</span><br><span class="line"></span><br><span class="line">Which environment <span class="keyword">do</span> you want the application to be initialized <span class="keyword">in</span>?</span><br><span class="line"></span><br><span class="line">  [0] Development</span><br><span class="line">  [1] Production</span><br><span class="line"></span><br><span class="line">  Your choice [0-1, or <span class="string">"q"</span> to quit] 0</span><br><span class="line"></span><br><span class="line">  Initialize the application under <span class="string">'Development'</span> environment? [yes|no] yes</span><br><span class="line"></span><br><span class="line">  Start initialization ...</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面初始化项目为开发状态。</p>
</blockquote>
<p>配置数据库信息，迁移数据：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打开配置文件</span></span><br><span class="line"><span class="comment"># common\config\main-local.php</span></span><br><span class="line"><span class="string">'components'</span> =&gt; [</span><br><span class="line">    <span class="string">'db'</span> =&gt; [</span><br><span class="line">        <span class="string">'class'</span> =&gt; <span class="string">'yii\db\Connection'</span>,</span><br><span class="line">        <span class="string">'dsn'</span> =&gt; <span class="string">'mysql:host=localhost;dbname=yii2advanced'</span>,</span><br><span class="line">        <span class="string">'username'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'password'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'charset'</span> =&gt; <span class="string">'utf8'</span>,</span><br><span class="line">        <span class="string">'tablePrefix'</span> =&gt; <span class="string">'yii_'</span></span><br><span class="line">    ],</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 迁移数据</span></span><br><span class="line">$ ./yii migrate</span><br><span class="line">Yii Migration Tool (based on Yii v2.0.12)</span><br><span class="line"></span><br><span class="line">Creating migration <span class="built_in">history</span> table <span class="string">"yii_migration"</span>...Done.</span><br><span class="line">Total 1 new migration to be applied:</span><br><span class="line">        m130524_201442_init</span><br><span class="line"></span><br><span class="line">Apply the above migration? (yes|no) [no]:yes</span><br><span class="line">*** applying m130524_201442_init</span><br><span class="line">    &gt; create table &#123;&#123;%user&#125;&#125; ... <span class="keyword">done</span> (time: 0.020s)</span><br><span class="line">*** applied m130524_201442_init (time: 0.035s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 migration was applied.</span><br><span class="line"></span><br><span class="line">Migrated up successfully.</span><br></pre></td></tr></table></figure>

<h2 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h2><p>使用 Apache 服务器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 将 path&#x2F;to&#x2F;basic&#x2F;web 修改为项目的实际目录</span><br><span class="line">DocumentRoot &quot;path&#x2F;to&#x2F;basic&#x2F;web&quot;</span><br><span class="line"></span><br><span class="line">&lt;Directory &quot;path&#x2F;to&#x2F;basic&#x2F;web&quot;&gt;</span><br><span class="line">    # 开启 mod_rewrite 用于美化 URL 功能的支持</span><br><span class="line">    RewriteEngine on</span><br><span class="line">    # 如果请求的是真实存在的文件或目录，直接访问</span><br><span class="line">    RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">    RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">    # 如果请求的不是真实文件或目录，分发请求至 index.php</span><br><span class="line">    RewriteRule . index.php</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br></pre></td></tr></table></figure>

<p>或使用 Nginx 服务器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 将 path&#x2F;to&#x2F;basic&#x2F;web 修改为项目的实际目录</span><br><span class="line">server &#123;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    client_max_body_size 128M;</span><br><span class="line"></span><br><span class="line">    listen 80; ## listen for ipv4</span><br><span class="line">    #listen [::]:80 default_server ipv6only&#x3D;on; ## listen for ipv6</span><br><span class="line"></span><br><span class="line">    server_name mysite.local;</span><br><span class="line">    root        &#x2F;path&#x2F;to&#x2F;basic&#x2F;web;</span><br><span class="line">    index       index.php;</span><br><span class="line"></span><br><span class="line">    access_log  &#x2F;path&#x2F;to&#x2F;basic&#x2F;log&#x2F;access.log;</span><br><span class="line">    error_log   &#x2F;path&#x2F;to&#x2F;basic&#x2F;log&#x2F;error.log;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        try_files $uri $uri&#x2F; &#x2F;index.php$is_args$args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        #fastcgi_pass unix:&#x2F;var&#x2F;run&#x2F;php5-fpm.sock;</span><br><span class="line">        try_files $uri &#x3D;404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* &#x2F;\. &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="验证测试"><a href="#验证测试" class="headerlink" title="验证测试"></a>验证测试</h2><p>浏览器中 <a href="http://localhost" target="_blank" rel="noopener">打开</a>，如下图。</p>
<p><img src="/fcoder/images/yii2-start-01.png" alt="yii2-start-01"></p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>yii2</tag>
      </tags>
  </entry>
  <entry>
    <title>为 Hexo 增加时序图解析功能</title>
    <url>/fcoder/2017/09/06/markdown-sequence/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://github.com/bubkoo/hexo-filter-sequence" target="_blank" rel="noopener">hexo-filter-sequence</a> 插件:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-filter-sequence</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>站点配置文件 <code>_config.yml</code> 中增加如下配置:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sequence:</span></span><br><span class="line">  <span class="attr">raphael:</span> <span class="string">https://cdn.bootcss.com/raphael/2.2.8/raphael.min.js</span></span><br><span class="line">  <span class="attr">webfont:</span> <span class="string">https://cdn.bootcss.com/webfont/1.6.28/webfontloader.js</span></span><br><span class="line">  <span class="attr">snap:</span> <span class="string">https://cdn.bootcss.com/snap.svg/0.5.1/snap.svg-min.js</span></span><br><span class="line">  <span class="attr">underscore:</span> <span class="string">https://cdn.bootcss.com/underscore.js/1.9.1/underscore-min.js</span></span><br><span class="line">  <span class="attr">sequence:</span> <span class="string">https://cdn.bootcss.com/js-sequence-diagrams/1.0.6/sequence-diagram-min.js</span></span><br><span class="line">  <span class="comment"># css: # optional, the url for css, such as hand drawn theme </span></span><br><span class="line">  <span class="attr">options:</span> </span><br><span class="line">    <span class="attr">theme:</span> <span class="string">simple</span></span><br></pre></td></tr></table></figure>

<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>源码修改后才能正常使用，进入插件目录作如下修改：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">var</span> assign = <span class="built_in">require</span>(<span class="string">'deep-assign'</span>);</span><br><span class="line"><span class="keyword">var</span> renderer = <span class="built_in">require</span>(<span class="string">'./lib/renderer'</span>);</span><br><span class="line"></span><br><span class="line">hexo.config.sequence = assign(&#123;</span><br><span class="line">  webfont: <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.27/webfontloader.js'</span>,</span><br><span class="line">  <span class="comment">// sequence-diagram 1.x 版本依赖 raphael, 2.x版本依赖 snap</span></span><br><span class="line">  raphael: <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js'</span>,</span><br><span class="line">  snap: <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js'</span>,</span><br><span class="line">  underscore: <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js'</span>,</span><br><span class="line">  sequence: <span class="string">'https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js'</span>,</span><br><span class="line">  css: <span class="string">''</span>,</span><br><span class="line">  options: &#123;</span><br><span class="line">    theme: <span class="string">'simple'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;, hexo.config.sequence);</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">'before_post_render'</span>, renderer.render, <span class="number">9</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// lib/renderer.js, 25 行</span></span><br><span class="line"><span class="keyword">if</span> (sequences.length) &#123;</span><br><span class="line">      <span class="keyword">var</span> config = <span class="keyword">this</span>.config.sequence;</span><br><span class="line">      <span class="comment">// resources</span></span><br><span class="line">      data.content += <span class="string">'&lt;script src="'</span> + config.webfont + <span class="string">'"&gt;&lt;/script&gt;'</span>;</span><br><span class="line">      <span class="comment">// sequence-diagram 1.x 版本依赖 raphael, 2.x版本依赖 snap</span></span><br><span class="line">      data.content += <span class="string">'&lt;script src="'</span> + config.raphael + <span class="string">'"&gt;&lt;/script&gt;'</span>;</span><br><span class="line">      data.content += <span class="string">'&lt;script src="'</span> + config.snap + <span class="string">'"&gt;&lt;/script&gt;'</span>;</span><br><span class="line">      data.content += <span class="string">'&lt;script src="'</span> + config.underscore + <span class="string">'"&gt;&lt;/script&gt;'</span>;</span><br><span class="line">      data.content += <span class="string">'&lt;script src="'</span> + config.sequence + <span class="string">'"&gt;&lt;/script&gt;'</span>;</span><br><span class="line">      ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>新建文章，增加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>uml</tag>
        <tag>sequence</tag>
      </tags>
  </entry>
  <entry>
    <title>为 Hexo 增加流程图解析功能</title>
    <url>/fcoder/2017/09/06/markdown-flowchart/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://github.com/bubkoo/hexo-filter-flowchart" target="_blank" rel="noopener">hexo-filter-flowchart</a> 插件:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-filter-flowchart</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>站点配置文件 <code>_config.yml</code> 中增加如下配置:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">flowchart:</span></span><br><span class="line">  <span class="attr">raphael:</span> <span class="string">https://cdn.bootcss.com/raphael/2.2.8/raphael.min.js</span></span><br><span class="line">  <span class="attr">flowchart:</span> <span class="string">https://cdn.bootcss.com/flowchart/1.11.3/flowchart.min.js</span></span><br><span class="line">  <span class="attr">options:</span> </span><br><span class="line">      <span class="attr">scale:</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line">      <span class="attr">line-width:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">line-length:</span> <span class="number">50</span></span><br><span class="line">      <span class="attr">text-margin:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">font-size:</span> <span class="number">12</span></span><br></pre></td></tr></table></figure>

<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>新建文章，增加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始:&gt;http:&#x2F;&#x2F;www.google.com[blank]</span><br><span class="line">e&#x3D;&gt;end: 结束:&gt;http:&#x2F;&#x2F;www.google.com[blank]</span><br><span class="line">op1&#x3D;&gt;operation: 操作</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">cond&#x3D;&gt;condition: 成功?:&gt;http:&#x2F;&#x2F;www.google.com[blank]</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出...</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>flowchart</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP 加密授权 - Zend Guard 篇</title>
    <url>/fcoder/2017/09/04/zend-guard/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>Windows10</li>
<li>Zend Guard 7.0 (32 bit)</li>
<li>Nginx 版 UPUPW PHP5.6 系列环境包</li>
</ul>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li><a href="https://store.roguewave.com/zend-guard/zend-guard-annual/" target="_blank" rel="noopener">Zend Guard 官网</a>  </li>
<li><a href="http://www.zend.com/en/products/guard/downloads" target="_blank" rel="noopener">Zend Grund 下载</a></li>
<li><a href="http://www.zend.com/en/products/loader/downloads" target="_blank" rel="noopener">Zend Guard Loader 下载</a></li>
<li><a href="http://www.upupw.net/nphp56/n119.html" target="_blank" rel="noopener">UPUPW PHP5.6 下载</a>  </li>
<li><a href="http://www.upupw.net/nginxhelp/" target="_blank" rel="noopener">UPUPW PHP5.6 帮助</a></li>
</ul>
<p>下载 Zend Guard、Nginx 版 UPUPW PHP5.6 系列环境包、Zend Guard Loader 软件；安装 Zend Guard，将 UPUPW PHP5.6 解压到合适的目录，<br>将 Zend Guard Loader 解压到 UPUPW PHP5.6 下的  <code>PHP/ext</code> 目录并替换原扩展。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>打开 <code>UPUPW PHP5.6/PHP5/php.ini</code> 文件，修改如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ZendLoader]</span><br><span class="line">zend_extension &#x3D;&quot;C:\DevTools\UPUPWNP5.6\PHP5\ext\php_ZendLoader.dll&quot;</span><br><span class="line">zend_loader.enable &#x3D; 1</span><br><span class="line">zend_loader.disable_licensing &#x3D; 0</span><br><span class="line">zend_loader.obfuscation_level_support &#x3D; 3</span><br><span class="line">zend_loader.license_path &#x3D; &quot;C:\DevTools\UPUPWNP5.6\htdocs\guard\licenses&quot;</span><br></pre></td></tr></table></figure>

<p>参数 <code>zend_extension</code> 为扩展存放目录，参数 <code>zend_loader.license_path</code> 为授权文件存放目录，请根据实际情况配置。</p>
<p>打开 UPUPW PHP5.6 控制面板【开启全部服务】:</p>
<p><img src="/fcoder/images/zend-guard-01.png" alt="zend-guard-01"></p>
<p>浏览器打开 <a href="http://localhost/u.php" target="_blank" rel="noopener">http://localhost/u.php</a> 地址，检查 Zend Guard Loader 扩展是否正常开启：</p>
<p><img src="/fcoder/images/zend-guard-02.png" alt="zend-guard-02"></p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>先准备源文件 <code>demo/index.php</code>，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>菜单中新建项目，输入项目名称，选择输出目录：</p>
<p><img src="/fcoder/images/zend-guard-03.png" alt="zend-guard-03"></p>
<p>添加源代码目录：</p>
<p><img src="/fcoder/images/zend-guard-04.png" alt="zend-guard-04"></p>
<p>源代码配置参数：</p>
<p><img src="/fcoder/images/zend-guard-05.png" alt="zend-guard-05"></p>
<p>基本配置完成：</p>
<p><img src="/fcoder/images/zend-guard-06.png" alt="zend-guard-06"></p>
<p>配置加密授权信息：</p>
<p><img src="/fcoder/images/zend-guard-07.png" alt="zend-guard-07"></p>
<p>生成授权文件：</p>
<p><img src="/fcoder/images/zend-guard-08.png" alt="zend-guard-08"></p>
<p>加密后的文件：</p>
<p><img src="/fcoder/images/zend-guard-09.png" alt="zend-guard-09"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>将加密输出的文件拷贝到 Web 目录，浏览器中打开。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>zend guard</tag>
      </tags>
  </entry>
  <entry>
    <title>国产 ngrok 穿透内网, 开发测试神器 - sunny</title>
    <url>/fcoder/2017/08/25/ngrok-sunny/</url>
    <content><![CDATA[<h2 id="ngrok-是什么"><a href="#ngrok-是什么" class="headerlink" title="ngrok 是什么"></a>ngrok 是什么</h2><p><a href="https://baike.baidu.com/item/ngrok/13986278?fr=aladdin" target="_blank" rel="noopener">百度百科</a><br><a href="https://ngrok.com/" target="_blank" rel="noopener">官网</a>   </p>
<blockquote>
<p><code>ngrok</code> 是一个反向代理，通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放。  </p>
</blockquote>
<p>官方版本 <code>ngrok</code> 有太多的限制，免费用户最多启动4个节点且不能自定义域名，所以我们跳过它直接介绍 <code>sunny</code> 的使用。</p>
<h2 id="sunny-才是福利"><a href="#sunny-才是福利" class="headerlink" title="sunny 才是福利"></a>sunny 才是福利</h2><ol>
<li><p>注册账号</p>
<p> 先到 <code>sunny</code> 官网 <a href="https://www.ngrok.cc/login/register" target="_blank" rel="noopener">注册账号</a>。</p>
</li>
<li><p>开通隧道</p>
<p> 在后台管理界面选择：隧道管理-&gt;开通隧道-&gt;选择免费产品，点击立即购买。</p>
<p> <img src="/fcoder/images/ngrok-sunny-01.png" alt="ngrok-sunny-01"></p>
<p> 填写表单：隧道协议、隧道名称、前置域名、本地端口，然后点击确定添加。</p>
<p> <img src="/fcoder/images/ngrok-sunny-02.png" alt="ngrok-sunny-02"></p>
<p> 返回隧道列表或点击隧道管理菜单，可以看到刚刚申请的隧道信息。</p>
<p> <img src="/fcoder/images/ngrok-sunny-03.png" alt="ngrok-sunny-03"></p>
</li>
<li><p>运行客户端</p>
<p> 下载 <code>sunny</code> <a href="https://www.ngrok.cc/#down-client" target="_blank" rel="noopener">客户端</a>，根据需要下载不同版本。</p>
<p> 命令行启动客户端：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># windows</span><br><span class="line">sunny clientid d3fdc171be3a94a0,e3fc6b1431a51e89</span><br><span class="line"># linux</span><br><span class="line">.&#x2F;sunny clientid d3fdc171be3a94a0,e3fc6b1431a51e89</span><br></pre></td></tr></table></figure>

<p> 启动成功后就可以通过 <code>ngrok.cc</code> 二级域名访问自己的站点了。</p>
</li>
</ol>
<h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><ol>
<li><p>准备域名</p>
<p> 首先要有自己的域名，最好是顶级的，如果没有可以到 <a href="http://www.freenom.com" target="_blank" rel="noopener">freenom</a> 免费领取一枚。</p>
</li>
<li><p>配置隧道自定义域名</p>
<p> 进入隧道编辑页面，修改域名类型、自定义域名，最后确认修改。</p>
<p> <img src="/fcoder/images/ngrok-sunny-04.png" alt="ngrok-sunny-04"></p>
</li>
<li><p>根据提示，修改域名的 <code>CNAME</code> 参数</p>
<p> 我的域名是从 <a href="http://www.freenom.com" target="_blank" rel="noopener">freenom</a> 申请的，配置方法如下图，其它域名请根据提供商文档操作。</p>
<p> <img src="/fcoder/images/ngrok-sunny-05.png" alt="ngrok-sunny-05"></p>
<blockquote>
<p><code>Target</code> 项填入的内容要与 sunny 提供的一致，请参考上图</p>
</blockquote>
</li>
</ol>
<h2 id="开机运行-sunny"><a href="#开机运行-sunny" class="headerlink" title="开机运行 sunny"></a>开机运行 sunny</h2><p>这是在 Ubuntu 16.04 上做的尝试。</p>
<ol>
<li><p>新建 <code>sunny.sh</code> 文件</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">count&#x3D;&#96;ps -ef | grep &quot;sunny&quot; | wc -l&#96;</span><br><span class="line"></span><br><span class="line">if [ $count -gt 0 ]; then</span><br><span class="line">killall sunny;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">&#x2F;root&#x2F;sunny&#x2F;sunny clientid de9e30c769c73e02,0fa3f0385e227f14</span><br></pre></td></tr></table></figure>

<p> <code>/root/sunny/sunny</code> 为 sunny 客户端所在路径，可以将多个隧道全部写在 <code>clientid</code> 后面。</p>
</li>
<li><p>添加开机运行</p>
<p> 在 <code>/ect/rc.local</code> 文件最后增加如下命令：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setsid &#x2F;root&#x2F;sunny&#x2F;sunny.sh</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>
</li>
<li><p>定时重启</p>
<p> 新建 <code>sunny.cron</code> 文件，输入如下内容：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 *&#x2F;1 * * * setsid &#x2F;root&#x2F;sunny&#x2F;sunny.sh</span><br></pre></td></tr></table></figure>

<p> 然后执行如下命令：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crontab sunny.cron</span><br></pre></td></tr></table></figure>

<blockquote>
<p>系统将每小时重启一次 <code>sunny</code> </p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>ngrok</tag>
        <tag>sunny</tag>
      </tags>
  </entry>
  <entry>
    <title>字典表设计</title>
    <url>/fcoder/2017/07/22/dictionary-table/</url>
    <content><![CDATA[<h2 id="为什么字典表"><a href="#为什么字典表" class="headerlink" title="为什么字典表"></a>为什么字典表</h2><p>某些变量在多个地方使用，而且一般是固定的，但是随着系统升级和后期变化，可能需要改变，如果这些变量写死在代码里面将会变得难以维护。</p>
<p>有的做法是使用枚举或者 Constants 常量类来实现，这种情况下在量少的前提是没问题的，但是一旦随着系统的开发拓展，后期将无法维护，甚至命名困难。</p>
<p>所以通常把字典放在数据库，这样后期的维护变更就比较简单,也可以在不用修改代码的情况下修改配置。</p>
<p>但是，放在数据库又有着频繁访问数据库的问题，这不是我们希望的，这时候通常做法就是加缓存，降低访问数据库的频率。</p>
<h2 id="字典表的设计"><a href="#字典表的设计" class="headerlink" title="字典表的设计"></a>字典表的设计</h2><p>通常分成两张表来实现，一个是字典类型，一个是字典</p>
<p>字典类型表: <code>SYS_DICT_TYPE</code></p>
<table>
<thead>
<tr>
<th>字段名</th>
<th>类型</th>
<th>作用</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>code</td>
<td>varchar</td>
<td>编码</td>
<td>主键</td>
</tr>
<tr>
<td>name</td>
<td>varchar</td>
<td>类型</td>
<td>-</td>
</tr>
</tbody></table>
<p>字典表 : <code>SYS_DICT</code></p>
<table>
<thead>
<tr>
<th>字段名</th>
<th>类型</th>
<th>作用</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>code</td>
<td>varchar</td>
<td>编码</td>
<td>主键</td>
</tr>
<tr>
<td>type_code</td>
<td>varchar</td>
<td>类型 code</td>
<td>外键</td>
</tr>
<tr>
<td>name</td>
<td>varchar</td>
<td>字典名</td>
<td>展示用</td>
</tr>
<tr>
<td>value</td>
<td>varchar</td>
<td>字典值</td>
<td>使用值</td>
</tr>
<tr>
<td>fixed</td>
<td>int</td>
<td>是否是固定的</td>
<td>default 0 不固定，固定的话用 1</td>
</tr>
</tbody></table>
<p>以上是字典表的关键列和结构的设计，根据不同系统不同业务自定其他列。</p>
<blockquote>
<p>作者：SevenLin1993<br>链接：<a href="http://www.jianshu.com/p/0034802afc1f" target="_blank" rel="noopener">http://www.jianshu.com/p/0034802afc1f</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
</blockquote>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>dictionary</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 GitHub 托管自己的项目</title>
    <url>/fcoder/2017/04/11/git-start/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Ubuntu-系统"><a href="#Ubuntu-系统" class="headerlink" title="Ubuntu 系统"></a>Ubuntu 系统</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-add-repository ppa:git-core/ppa</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure>

<p>如果出现 <code>apt-add-repository: command not found</code> 错误，要先执行以下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install python-software-properties</span><br><span class="line">$ sudo apt-get install software-properties-common</span><br></pre></td></tr></table></figure>

<h3 id="Windows-系统"><a href="#Windows-系统" class="headerlink" title="Windows 系统"></a>Windows 系统</h3><p>下载 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Git for Windows</a>，建议下载安装版根据提示安装。<br>Windows 系统中，以下操作均在 <code>Git Bash</code> 命令窗口中执行。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="设置全局用户"><a href="#设置全局用户" class="headerlink" title="设置全局用户"></a>设置全局用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"Your Name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"youremail@gmail.com"</span></span><br></pre></td></tr></table></figure>

<h3 id="设置密钥"><a href="#设置密钥" class="headerlink" title="设置密钥"></a>设置密钥</h3><p>生成 <code>ssh</code> 密钥:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail@gmail.com"</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/user/.ssh/id_rsa): <span class="comment">#保存位置,回车</span></span><br><span class="line">Enter passphrase (empty For no passphrase): <span class="comment">#加密,不加密直接回车</span></span><br><span class="line">Enter same passphrase again:    <span class="comment">#加密校验</span></span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/user/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/user/.ssh/id_rsa.pub.</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>如果备份了 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 文件，可以直接将其复制到 <code>~/.ssh</code> 目录:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cp ./id_rsa* ~/.ssh</span><br></pre></td></tr></table></figure>

<p>复制后要检查密钥文件的读写权限，安全的设置如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls -al ~/.ssh/id_rsa*</span><br><span class="line">-rw------- 1 user grp 1675 Aug 11 02:23 /home/user/.ssh/id_rsa</span><br><span class="line">-rw-r--r-- 1 user grp  401 Aug 11 02:23 /home/user/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>把密钥添加到 <code>ssh-agent</code> 的高速缓存中:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-add</span><br><span class="line">Identity added: /home/user/.ssh/id_rsa (/home/user/.ssh/id_rsa)</span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="将公钥内容导入远程-git-服务站点"><a href="#将公钥内容导入远程-git-服务站点" class="headerlink" title="将公钥内容导入远程 git 服务站点"></a>将公钥内容导入远程 <code>git</code> 服务站点</h3><p>在 <a href="https://github.com" target="_blank" rel="noopener">github.com</a> 或 <a href="https://gitee.com" target="_blank" rel="noopener">gitee.com</a> 上申请个帐号。<br>将 <code>id_rsa.pub</code> 公钥内容添加到已经申请的帐号，目录如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># github.com</span></span><br><span class="line">Settings -&gt; SSH and GPG keys -&gt; New GPG key  </span><br><span class="line"><span class="comment"># gitee.com</span></span><br><span class="line">修改资料 -&gt; SSH公钥 -&gt; 添加公钥</span><br></pre></td></tr></table></figure>

<h3 id="新建项目，并克隆到本地"><a href="#新建项目，并克隆到本地" class="headerlink" title="新建项目，并克隆到本地"></a>新建项目，并克隆到本地</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:username/project.git</span><br><span class="line"><span class="comment">## 或</span></span><br><span class="line">$ git <span class="built_in">clone</span> git@gitee.com:username/project.git</span><br></pre></td></tr></table></figure>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> project</span><br><span class="line"><span class="comment"># 拉取远程或其它仓库内容合并到本地仓库</span></span><br><span class="line"><span class="comment"># Fetch from and integrate with another repository or a local branch</span></span><br><span class="line">$ git pull</span><br><span class="line"><span class="comment"># 将文件内容添加到索引中</span></span><br><span class="line"><span class="comment"># Add file contents to the index</span></span><br><span class="line">$ git add --all</span><br><span class="line">$ git add .</span><br><span class="line">$ git add &lt;file&gt;...</span><br><span class="line"><span class="comment"># 提交修改到本地仓库</span></span><br><span class="line"><span class="comment"># Record changes to the repository</span></span><br><span class="line">$ git commit -a -m <span class="string">"说明"</span></span><br><span class="line"><span class="comment"># 将本地暂存内容更新到远程仓库</span></span><br><span class="line"><span class="comment"># Update remote refs along with associated objects</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Hexo 搭建个人博客 - 体验</title>
    <url>/fcoder/2016/04/07/hexo-blog-taste/</url>
    <content><![CDATA[<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li><p>安装 <code>Node.js</code> 环境， <a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网</a> </p>
<p> <a href="/fcoder/2015/03/15/nodejs-start/">参考：Node.js 之旅 - 好的开端</a></p>
</li>
<li><p>安装 <code>Git</code> 版本管理工具，<a href="https://git-scm.com" target="_blank" rel="noopener">官网</a> </p>
<p> <a href="nodejs-start.md">参考：</a></p>
</li>
<li><p>安装 <code>hexo-cli</code> 命令行工具，初始化一个项目</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p> 目录结构大致如下：</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">├── _config.yml             <span class="comment"># 项目配置文件</span></span><br><span class="line">├── node_modules            </span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds               <span class="comment"># 模板目录</span></span><br><span class="line">├── <span class="built_in">source</span>                  <span class="comment"># 文章源目录</span></span><br><span class="line">│   └── _posts              <span class="comment"># 文章目录</span></span><br><span class="line">│       └── hello-world.md  <span class="comment"># 第一篇文章</span></span><br><span class="line">├── themes                  <span class="comment"># 主题目录</span></span><br><span class="line">│   └── landscape           <span class="comment"># 默认主题</span></span><br><span class="line">│       ├── _config.yml     <span class="comment"># 主题配置文件</span></span><br><span class="line">│       ├── Gruntfile.js</span><br><span class="line">│       ├── languages       <span class="comment"># 主题语言设置</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动本地服务，查看效果</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p> 用浏览器打开命令行中输出的地址就可以查看效果了。</p>
</li>
</ol>
<h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><ol>
<li><p>新建一篇文章</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo new hexo-blog</span><br></pre></td></tr></table></figure>
<p> 此时 <code>source/_post/</code> 目录下多了一个 <code>hexo-blog.md</code> 文件，内容如下：</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo-blog</span><br><span class="line">date: 2016-04-07 21:20:35</span><br><span class="line">categories: </span><br><span class="line">tags: </span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p>写文章，修改 <code>hexo-blog.md</code> 的内容</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 使用 Hexo 搭建个人博客</span><br><span class="line">date: 2016-04-07 21:20:35</span><br><span class="line">categories: </span><br><span class="line">-- 工具</span><br><span class="line">tags: </span><br><span class="line">-- hexo</span><br><span class="line">-- markdown</span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">## 写文章</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成文章</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p> 刷新浏览器就可以看到刚刚完成的文章了。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 语法示例</title>
    <url>/fcoder/2016/01/20/markdown-syntax-sample/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>段落 <code>&lt;p&gt;</code> 前后必须保留一个或多个的空行。<br>段落内换行 <code>&lt;br&gt;</code> 要在行尾追加两个以上的空格然后回车。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">春晓</span><br><span class="line"></span><br><span class="line">春眠不觉晓，处处闻啼鸟。  </span><br><span class="line">夜来风雨声，花落知多少。</span><br></pre></td></tr></table></figure>

<p>春晓</p>
<p>春眠不觉晓，处处闻啼鸟。<br>夜来风雨声，花落知多少。</p>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>在行首插入 1 到 6 个 <code>#</code> ，对应标题 <code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 标题 h1</span></span><br><span class="line"><span class="section">## 标题 h2</span></span><br><span class="line"><span class="section">### 标题 h3</span></span><br><span class="line"><span class="section">#### 标题 h4</span></span><br><span class="line"><span class="section">##### 标题 h5</span></span><br><span class="line"><span class="section">###### 标题 h6</span></span><br></pre></td></tr></table></figure>

<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>在段落或其他内容前使用 <code>&gt;</code> 符号，就可以将这段内容标记为 ‘引用’ 的内容 <code>&lt;blockquote&gt;</code>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 引用内容。</span></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 多行引用，第一行;</span></span><br><span class="line"><span class="quote">&gt; 多行引用，第二行;</span></span><br><span class="line"><span class="quote">&gt; 多行引用，第三行。</span></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 嵌套引用，第一层。</span></span><br><span class="line"><span class="quote">&gt; &gt; 嵌套引用，第二层。</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 嵌套引用，第三层。</span></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 包含其它 `Markdown` 语法</span></span><br><span class="line">&gt;</span><br><span class="line"><span class="quote">&gt; - 列表项目</span></span><br><span class="line"><span class="quote">&gt; - 列表项目</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>引用内容。</p>
</blockquote>
<blockquote>
<p>多行引用，第一行;<br>多行引用，第二行;<br>多行引用，第三行。</p>
</blockquote>
<blockquote>
<p>嵌套引用，第一层。</p>
<blockquote>
<p>嵌套引用，第二层。</p>
<blockquote>
<p>嵌套引用，第三层。</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>包含其它 <code>Markdown</code> 语法</p>
<ul>
<li>列表项目</li>
<li>列表项目</li>
</ul>
</blockquote>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>无序列表项 <code>&lt;ul&gt;</code> 以 <code>*</code> <code>+</code> 或 <code>-</code> 加空格空格开始:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>无序列表 1</span><br><span class="line"><span class="bullet">    + </span>嵌套子列表 11</span><br><span class="line"><span class="bullet">    + </span>嵌套子列表 12</span><br><span class="line"><span class="bullet">+ </span>无序列表 2</span><br><span class="line"><span class="bullet">- </span>无序列表 3</span><br></pre></td></tr></table></figure>

<ul>
<li>无序列表 1<ul>
<li>嵌套子列表 11</li>
<li>嵌套子列表 12</li>
</ul>
</li>
</ul>
<ul>
<li>无序列表 2</li>
</ul>
<ul>
<li>无序列表 3</li>
</ul>
<p>有序列表项 <code>&lt;ol&gt;</code> 以 <code>任意数字</code> 加 <code>.</code> 再加 <code>空格</code> 开始:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>有序列表 1</span><br><span class="line"><span class="bullet">    + </span>子列表 11</span><br><span class="line"><span class="bullet">    + </span>子列表 12</span><br><span class="line"><span class="bullet">1. </span>有序列表 2</span><br><span class="line"><span class="bullet">1. </span>有序列表 3</span><br></pre></td></tr></table></figure>

<ol>
<li>有序列表 1<ul>
<li>子列表 11</li>
<li>子列表 12</li>
</ul>
</li>
<li>有序列表 2</li>
<li>有序列表 3</li>
</ol>
<p>列表项可以包含其它内容，内容必须以 4 个空格或 1 个制表符缩进:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>项目中包含多个段落</span><br><span class="line"></span><br><span class="line"><span class="code">    段落内容，  </span></span><br><span class="line"><span class="code">    段落内容。</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>项目中包含码块</span><br><span class="line"></span><br><span class="line"><span class="code">        echo 'Hello World!';</span></span><br></pre></td></tr></table></figure>

<ol>
<li><p>项目中包含多个段落</p>
<p> 段落内容，<br> 段落内容。</p>
</li>
<li><p>项目中包含码块，缩进 8 个空格或 2 个制表符</p>
<pre><code>echo &apos;Hello World!&apos;;</code></pre></li>
</ol>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>代码块 <code>&lt;code&gt;</code> 前后必须有一个或多个空行，且每行代码必须以 4 个空格或 1 个制表符缩进:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function fn () &#123;</span><br><span class="line">  var str &#x3D; &#39;Hello World&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<pre><code>function fn () {
var str = &apos;Hello World&apos;;
}</code></pre><p>扩展语法，代码无须缩进，并可指明语言类型实现代码高亮:</p>
<pre><code>` ` ` js
function fn () {
  var str = &apos;Hello World&apos;;
}
` ` `</code></pre><blockquote>
<p>上面 ` 符号之间应该没有空格，因 <code>hexo</code> 解析问题无法正常显示，此处加了空格</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">'Hello World'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>行内代码:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">行内代码如 <span class="code">`&lt;title&gt;&lt;/title&gt;`</span> ，` 是 Tab 键上方、数字 1 键左侧的按键。</span><br></pre></td></tr></table></figure>

<p>行内代码如 <code>&lt;title&gt;&lt;/title&gt;</code> ，` 是 Tab 键上方、数字 1 键左侧的按键。</p>
<h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>使用三个或更多的 <code>*</code> <code>-</code> 或 <code>_</code> 来添加分隔线 <code>&lt;hr&gt;</code>:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">***</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<hr>
<hr>
<hr>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>行内式格式为 <code>[链接名称](链接地址 &quot;标题文本&quot;)</code> :</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com "百度"</span>)  </span><br><span class="line">[<span class="string">Google</span>](<span class="link">https://www.google.com.hk "谷歌"</span>)  </span><br><span class="line">[<span class="string">Readme</span>](<span class="link">README.md "相对路径"</span>)</span><br></pre></td></tr></table></figure>

<p><a href="https://www.baidu.com" target="_blank" rel="noopener" title="百度">百度</a><br><a href="https://www.google.com.hk" target="_blank" rel="noopener" title="谷歌">谷歌</a><br><a href="README.md" title="相对路径">说明</a></p>
<p>参考式链接的写法相当于行内式拆分成两部分，通过 <em>标识符</em> 来连接两部分:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">链接名称</span>][<span class="symbol">标识符</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">标识符</span>]: <span class="link">链接地址 "标题文本"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>标识符可以是字母、数字、空白或标点符号;</li>
<li>参考式便于集中管理链接内容。</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">百度</span>][<span class="symbol">baidu</span>] [<span class="string">谷歌</span>][<span class="symbol">google</span>] [<span class="string">百度</span>][<span class="symbol">1</span>] [<span class="string">谷歌</span>][<span class="symbol">2</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">baidu</span>]: <span class="link">https://www.baidu.com "百度"</span></span><br><span class="line">[<span class="symbol">google</span>]: <span class="link">https://www.google.com.hk "谷歌"</span></span><br><span class="line">[<span class="symbol">1</span>]: <span class="link">https://www.baidu.com "百度"  </span></span><br><span class="line">[<span class="symbol">2</span>]: <span class="link">https://www.google.com.hk "谷歌"</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.baidu.com" target="_blank" rel="noopener" title="百度">百度</a> <a href="https://www.google.com.hk" target="_blank" rel="noopener" title="谷歌">谷歌</a> <a href="https://www.baidu.com" target="_blank" rel="noopener" title="百度">百度</a> <a href="https://www.google.com.hk" target="_blank" rel="noopener" title="谷歌">谷歌</a></p>
<p>自动链接使用 <code>&lt;&gt;</code> 包括的链接地址或邮箱地址会被自动转换为超链接：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">www.baidu.com</span>&gt;</span></span>  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">123@email.com</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.baidu.com" target="_blank" rel="noopener">https://www.baidu.com</a><br><a href="mailto:&#49;&#x32;&#51;&#x40;&#101;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;">&#49;&#x32;&#51;&#x40;&#101;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a></p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个 <code>!</code>。</p>
<p>行内式的图片语法:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片名称</span>](<span class="link">图片地址</span>)  </span><br><span class="line">![<span class="string">图片名称</span>](<span class="link">图片地址 "标题文本"</span>)</span><br></pre></td></tr></table></figure>

<p>参考式的图片语法:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片名称</span>][<span class="symbol">标识符</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">标识符</span>]: <span class="link">图片地址  "标题文本"</span></span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">It's Markdown!</span>](<span class="link">http://7xlhbk.com1.z0.glb.clouddn.com/markdown.jpg "It's Markdown!"</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">It's Markdown!</span>][<span class="symbol">Markdown</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">Markdown</span>]: <span class="link">http://7xlhbk.com1.z0.glb.clouddn.com/markdown.jpg  "It's Markdown!"</span></span><br></pre></td></tr></table></figure>

<h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>使用 <code>*文本*</code> 或 <code>_文本_</code> 实现 <code>&lt;em&gt;文本&lt;/em&gt;</code> ，通常表现为斜体:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">强调 <span class="emphasis">*演示*</span> <span class="emphasis">_文本_</span></span><br></pre></td></tr></table></figure>

<p>强调 <em>演示</em> <em>文本</em></p>
<p>使用 <code>**文本**</code> 或 <code>__文本__</code> 实现 <code>&lt;strong&gt;文本&lt;/strong&gt;</code>，通常表现为加粗:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">强调 <span class="strong">**演示**</span> <span class="strong">__文本__</span></span><br></pre></td></tr></table></figure>

<p>强调 <strong>演示</strong> <strong>文本</strong></p>
<h3 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h3><p>反斜线 <code>\</code> 转义特殊字符:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">\ ` * _ &#123;&#125; [] () # + - . !</span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>2 * 1 = 2</span><br><span class="line"></span><br><span class="line">\- 2 * 1 = 2</span><br></pre></td></tr></table></figure>

<ul>
<li>2 * 1 = 2</li>
</ul>
<p>- (2 * 1) = - 2</p>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure>

<p><del>删除线</del></p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>使用 <code>|</code> 分隔单元格，使用 <code>-</code> 分隔表头和其他行：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 表头 1 | 表头 2 |</span><br><span class="line">| --- | --- |</span><br><span class="line">| 单元格 11 | 单元格 21 |</span><br><span class="line">| 单元格 12 | 单元格 22 |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>表头 1</th>
<th>表头 2</th>
</tr>
</thead>
<tbody><tr>
<td>单元格 11</td>
<td>单元格 21</td>
</tr>
<tr>
<td>单元格 12</td>
<td>单元格 22</td>
</tr>
</tbody></table>
<blockquote>
<p>建议 <code>|</code> 和 <code>-</code> 两侧保留空格，这样内容更加清晰。</p>
</blockquote>
<p>使用 <code>:</code> 实现单元格左右或居中对齐：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 默认 | 左对齐 | 居中对齐 | 右对齐 |</span><br><span class="line">| --- | :--- | :---: | ---: |</span><br><span class="line">| 默认左对齐 | 此列文本左对齐 | 此列文本居中对齐 | 此列文本右对齐 |</span><br><span class="line">| 左对齐 | 左对齐 | 居中对齐 | 右对齐 |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>默认</th>
<th align="left">左对齐</th>
<th align="center">居中对齐</th>
<th align="right">右对齐</th>
</tr>
</thead>
<tbody><tr>
<td>默认左对齐</td>
<td align="left">此列文本左对齐</td>
<td align="center">此列文本居中对齐</td>
<td align="right">此列文本右对齐</td>
</tr>
<tr>
<td>左对齐</td>
<td align="left">左对齐</td>
<td align="center">居中对齐</td>
<td align="right">右对齐</td>
</tr>
</tbody></table>
<p>语法嵌套:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 强调 | 代码 | 链接 |</span><br><span class="line">| --- | --- | --- |</span><br><span class="line">| <span class="emphasis">_百度_</span> | <span class="code">`Baidu`</span> | [<span class="string">百度</span>](<span class="link">https://www.baidu.com</span>) |</span><br><span class="line">| <span class="strong">__谷歌__</span> | <span class="code">`Google`</span> | [<span class="string">谷歌</span>](<span class="link">https://www.google.com.hk</span>) |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>强调</th>
<th>代码</th>
<th>链接</th>
</tr>
</thead>
<tbody><tr>
<td><em>百度</em></td>
<td><code>Baidu</code></td>
<td><a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a></td>
</tr>
<tr>
<td><strong>谷歌</strong></td>
<td><code>Google</code></td>
<td><a href="https://www.google.com.hk" target="_blank" rel="noopener">谷歌</a></td>
</tr>
</tbody></table>
<h3 id="兼容HTML语法"><a href="#兼容HTML语法" class="headerlink" title="兼容HTML语法"></a>兼容HTML语法</h3><p>可以直接引用 <code>HTML</code> 元素，元素的开始标签前和结束标签后各保留一个空行:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">指定特殊样式</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span> <span class="attr">style</span>=<span class="string">"color:red;"</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">th</span>&gt;</span></span>#<span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">th</span>&gt;</span></span>代码<span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">th</span>&gt;</span></span>输出<span class="xml"><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span>1<span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span>date('Y-m-d')<span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span>2016-07-15<span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span>2<span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span>date('Y-m-t')<span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span>2016-07-31<span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<table class="table" style="color:red;">
  <tr><th>#</th><th>代码</th><th>输出</th></tr>
  <tr><td>1</td><td>date('Y-m-d')</td><td>2016-07-15</td></tr>
  <tr><td>2</td><td>date('Y-m-t')</td><td>2016-07-31</td></tr>
</table>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">Markdown 语法说明 - 中文</a></li>
<li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">Markdown 语法说明 - 英文</a></li>
<li><a href="https://github.com/wewelove/Learning-Markdown" target="_blank" rel="noopener">Markdown 入门参考</a></li>
</ul>
<h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><ul>
<li><a href="https://github.com/chjj/marked" target="_blank" rel="noopener">marked</a></li>
<li><a href="https://github.com/evilstreak/markdown-js" target="_blank" rel="noopener">markdown-js</a></li>
<li><a href="https://github.com/toopay/bootstrap-markdown" target="_blank" rel="noopener">bootstrap-markdown</a></li>
<li><a href="https://github.com/NextStepWebs/simplemde-markdown-editor" target="_blank" rel="noopener">SimpleMDE</a></li>
<li><a href="https://github.com/knsv/mermaid" target="_blank" rel="noopener">mermaid</a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js 之旅 - 好的开端</title>
    <url>/fcoder/2015/03/15/nodejs-start/</url>
    <content><![CDATA[<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网</a> 下载二进制安装包直接安装。<br>其它方法参考 <a href="https://nodejs.org/en/download/package-manager/#windows" target="_blank" rel="noopener">官方文档</a>。</p>
<h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 根据需要选择不同版本: 6.x、7.x ....</span></span><br><span class="line">$ curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</span><br><span class="line">$ curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure>

<p>详细说明请参考 <a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions" target="_blank" rel="noopener">官方文档</a>。</p>
<h3 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 根据需要选择不同版本: 6.x、7.x ....</span></span><br><span class="line">$ curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -</span><br><span class="line">$ curl --silent --location https://rpm.nodesource.com/setup_7.x | bash -</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ yum -y install nodejs</span><br></pre></td></tr></table></figure>

<p>详细说明请参考 <a href="https://nodejs.org/en/download/package-manager/#enterprise-linux-and-fedora" target="_blank" rel="noopener">官方文档</a>。</p>
<h3 id="OSX"><a href="#OSX" class="headerlink" title="OSX"></a>OSX</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl <span class="string">"https://nodejs.org/dist/latest/node-<span class="variable">$&#123;VERSION:-$(wget -qO- https://nodejs.org/dist/latest/ | sed -nE 's|.*&gt;node-(.*)\.pkg&lt;/a&gt;.*|\1|p')&#125;</span>.pkg"</span> &gt; <span class="string">"<span class="variable">$HOME</span>/Downloads/node-latest.pkg"</span> &amp;&amp; sudo installer -store -pkg <span class="string">"<span class="variable">$HOME</span>/Downloads/node-latest.pkg"</span> -target <span class="string">"/"</span></span><br><span class="line"><span class="comment"># 使用 Homebrew 安装</span></span><br><span class="line">$ brew install node</span><br><span class="line"><span class="comment"># 或使用 MacPorts 安装</span></span><br><span class="line">$ port install nodejs</span><br></pre></td></tr></table></figure>

<p>详细说明请参考 <a href="https://nodejs.org/en/download/package-manager/#osx" target="_blank" rel="noopener">官方文档</a>。</p>
<h2 id="包管理器-NPM"><a href="#包管理器-NPM" class="headerlink" title="包管理器 NPM"></a>包管理器 NPM</h2><h3 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用淘宝镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org --global</span><br><span class="line">$ sudo npm config <span class="built_in">set</span> disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure>

<h3 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示配置[所有]</span></span><br><span class="line">npm config list [-l]</span><br><span class="line"><span class="comment"># 设置 &lt;key&gt; 参数值 &lt;value&gt; [全局]</span></span><br><span class="line">npm config <span class="built_in">set</span> &lt;key&gt; &lt;value&gt; [-g]</span><br><span class="line"><span class="comment"># 获取 &lt;key&gt; 参数</span></span><br><span class="line">npm config get &lt;key&gt;</span><br><span class="line"><span class="comment"># 删除 &lt;key&gt;参数</span></span><br><span class="line">npm config delete &lt;key&gt;</span><br></pre></td></tr></table></figure>

<h3 id="获取帮助信息"><a href="#获取帮助信息" class="headerlink" title="获取帮助信息"></a>获取帮助信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取 &lt;term&gt; 命令的帮助信息</span></span><br><span class="line">npm <span class="built_in">help</span> &lt;term&gt; [&lt;terms..&gt;]</span><br></pre></td></tr></table></figure>

<h3 id="更新-NPM"><a href="#更新-NPM" class="headerlink" title="更新 NPM"></a>更新 NPM</h3><p>Windows 系统的操作要慎重。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取并进入 Node.js 安装目录</span></span><br><span class="line">&gt; npm config get prefix -g</span><br><span class="line"><span class="comment"># 最新版本</span></span><br><span class="line">&gt; npm install -g npm@latest</span><br><span class="line"><span class="comment"># 或LTS版本</span></span><br><span class="line">&gt; npm install -g npm@lts</span><br></pre></td></tr></table></figure>

<p>OSX 和 Linux 系统的操作比较简单。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 最新版本</span></span><br><span class="line">$ sudo npm install -g npm@latest</span><br><span class="line"><span class="comment"># 或LTS版本</span></span><br><span class="line">$ sudo npm install -g npm@lts</span><br></pre></td></tr></table></figure>

<h3 id="项目应用"><a href="#项目应用" class="headerlink" title="项目应用"></a>项目应用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化项目，创建 package.json 文件</span></span><br><span class="line">npm init</span><br><span class="line"><span class="comment"># 全局安装 &lt;pkg&gt; 包</span></span><br><span class="line">npm install -g &lt;pkg&gt;@&lt;tag&gt;</span><br><span class="line">npm install -g &lt;pkg&gt;@&lt;version&gt;</span><br><span class="line"><span class="comment"># 项目安装 &lt;pkg&gt; 包，并写入 package.json 文件 [dependencies] 字段</span></span><br><span class="line">npm install &lt;pkg&gt;@&lt;tag&gt; --save</span><br><span class="line">npm install &lt;pkg&gt;@&lt;version&gt; --save</span><br><span class="line"><span class="comment"># 项目安装 &lt;pkg&gt; 包，并写入 package.json 文件 [devDependencies] 字段</span></span><br><span class="line">npm install &lt;pkg&gt;@&lt;tag&gt; --save-dev</span><br><span class="line">npm install &lt;pkg&gt;@&lt;version&gt; --save-dev</span><br><span class="line"><span class="comment"># 安装项目依赖包（package.json 文件 [dependencies] 字段内容）,</span></span><br><span class="line"><span class="comment"># 安装开发依赖包（package.json 文件 [devDependencies] 字段内容）</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 安装项目依赖包（package.json 文件 [dependencies] 字段内容）</span></span><br><span class="line">npm install --production</span><br><span class="line"><span class="comment"># 删除 &lt;pkg&gt; 包，与 install 操作对应</span></span><br><span class="line">npm uninstall [-g] &lt;pkg&gt;@&lt;tag&gt; [--save|--save-dev]</span><br><span class="line">npm uninstall [-g] &lt;pkg&gt;@&lt;version&gt; [--save|--save-dev]</span><br><span class="line"><span class="comment"># 更新项目[全局] &lt;pkg&gt; 包</span></span><br><span class="line">npm update [-g] [&lt;pkg&gt;...]</span><br><span class="line"><span class="comment"># 显示项目[全局]已经安装的包</span></span><br><span class="line">npm ls [-g]</span><br></pre></td></tr></table></figure>

<h3 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Facebook 出品，可替代 npm 的包管理工具</span></span><br><span class="line">$ sudo npm install -g yarn</span><br><span class="line"><span class="comment"># Node.js 版本管理，nvm 不支持 Windows 操作系统</span></span><br><span class="line">$ sudo npm install -g nvm</span><br></pre></td></tr></table></figure>

<h2 id="第一个项目"><a href="#第一个项目" class="headerlink" title="第一个项目"></a>第一个项目</h2><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir nodejs-start</span><br><span class="line">$ <span class="built_in">cd</span> nodejs-start</span><br><span class="line">$ npm init</span><br></pre></td></tr></table></figure>

<p>根据提示完成以下操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">This utility will walk you through creating a package.json file.</span><br><span class="line">It only covers the most common items, and tries to guess sensible defaults.</span><br><span class="line"></span><br><span class="line">See `npm <span class="built_in">help</span> json` <span class="keyword">for</span> definitive documentation on these fields</span><br><span class="line">and exactly what they <span class="keyword">do</span>.</span><br><span class="line"></span><br><span class="line">Use `npm install &lt;pkg&gt; --save` afterwards to install a package and</span><br><span class="line">save it as a dependency <span class="keyword">in</span> the package.json file.</span><br><span class="line"></span><br><span class="line">Press ^C at any time to quit.</span><br><span class="line">name: (nodejs-start) <span class="comment"># 直接回车</span></span><br><span class="line">version: (1.0.0) <span class="comment"># 直接回车</span></span><br><span class="line">description: <span class="comment"># 直接回车</span></span><br><span class="line">entry point: (index.js) <span class="comment"># 直接回车</span></span><br><span class="line"><span class="built_in">test</span> <span class="built_in">command</span>:  node index.js <span class="comment"># 输入 node index.js</span></span><br><span class="line">git repository: <span class="comment"># 直接回车</span></span><br><span class="line">keywords: <span class="comment"># 直接回车</span></span><br><span class="line">author: <span class="comment"># 直接回车</span></span><br><span class="line">license: (ISC) <span class="comment"># 直接回车</span></span><br><span class="line">About to write to /home/wh/Workspace/nodejs-start/package.json:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"name"</span>: <span class="string">"nodejs-start"</span>,</span><br><span class="line"><span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line"><span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"node index.js"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"license"</span>: <span class="string">"ISC"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Is this ok? (yes) yes  <span class="comment"># 输入 yes</span></span><br></pre></td></tr></table></figure>

<h3 id="安装项目依赖包-lodash"><a href="#安装项目依赖包-lodash" class="headerlink" title="安装项目依赖包 lodash"></a>安装项目依赖包 <code>lodash</code></h3><p><a href="https://lodash.com/" target="_blank" rel="noopener"><code>lodash</code></a> 是一个功能丰富的 <code>javascript</code> 工具库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install lodash --save</span><br><span class="line">$ cat package.json </span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"nodejs-start"</span>,</span><br><span class="line">    <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">    <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">    <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"node index.js"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">    <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"lodash"</span>: <span class="string">"^4.17.4"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="新建-index-js-文件"><a href="#新建-index-js-文件" class="headerlink" title="新建 index.js 文件"></a>新建 <code>index.js</code> 文件</h3><p>码一下代码，不要拷贝。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _ = <span class="built_in">require</span>(<span class="string">'lodash'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sayHello = _.template(<span class="string">'Hello &lt;%= name %&gt;!'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sayHello(&#123;<span class="string">'name'</span>: <span class="string">'Node.js'</span>&#125;));</span><br></pre></td></tr></table></figure>

<h3 id="看看我们做了什么"><a href="#看看我们做了什么" class="headerlink" title="看看我们做了什么"></a>看看我们做了什么</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ node index.js</span><br><span class="line">Hello Node.js!</span><br></pre></td></tr></table></figure>

<p>或通过 <code>package.json</code> 中 <code>scripts</code> 字段的配置执行文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">&gt; nodejs-start@1.0.0 <span class="built_in">test</span> /home/wh/Workspace/nodejs-start</span><br><span class="line">&gt; node index.js</span><br><span class="line"></span><br><span class="line">Hello Node.js!</span><br></pre></td></tr></table></figure>

<blockquote>
<p>坚持完成上面的每一步，直到屏幕上输出 <code>Hello Node.js!</code> 。<br>认真阅读每一步的输出信息，会有意外的收获。</p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>npm</tag>
      </tags>
  </entry>
</search>
